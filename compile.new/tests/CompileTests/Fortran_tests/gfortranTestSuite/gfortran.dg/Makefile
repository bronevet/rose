# Makefile.in generated by automake 1.9.6 from Makefile.am.
# tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic 
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?
srcdir = ../../../../../../tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg
top_srcdir = ../../../../../..
VPATH = ../../../../../../tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg
pkgdatadir = $(datadir)/rose
pkglibdir = $(libdir)/rose
pkgincludedir = $(includedir)/rose
top_builddir = ../../../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs
am__append_1 = 
subdir = tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 $(top_srcdir)/config/argz.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltdl.m4 $(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-backstroke.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-cuda-opencl.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-git-versioning.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
depcomp =
am__depfiles_maybe =
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABS_COMPASS2_XML_SRCDIR = /home/bronevet/Downloads/rose/projects/compass2/compass2/xml
ACLOCAL = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run aclocal-1.9
ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE = 
ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE = #
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run tar
AR = ar
ARGZ_H = 
AUTOCONF = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run automake-1.9
AUX_LINKER = 
AWK = gawk
AXXPXX_SPECIFIC_TESTS_FALSE = 
AXXPXX_SPECIFIC_TESTS_TRUE = #
Axx_INCLUDES = 
Axx_LIBS = 
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = 4
BACKEND_COMPILER_VERSION_MINOR_NUMBER = 4
BACKEND_COMPILER_VERSION_NAME = GNU
BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_FALSE = 
BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_TRUE = #
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = 6
BACKEND_CXX_COMPILER = g++
BACKEND_C_COMPILER = gcc
BACKEND_FORTRAN_COMPILER = gfortran
BACKEND_JAVA_COMPILER = javac
BACKSTROKE_ROSS_INCLUDE = 
BACKSTROKE_SPEEDES_INCLUDE = 
BINARY_EDG_TARBALL_ENABLED_FALSE = 
BINARY_EDG_TARBALL_ENABLED_TRUE = #
BOOST_CPPFLAGS = -pthread -I/home/bronevet/apps/boost/include
BOOST_DATE_TIME_LIB = -lboost_date_time
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS =  -L/home/bronevet/apps/boost/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_REGEX_LIB = -lboost_regex
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_WAVE_LIB = -lboost_wave
CANDL_PATH = 
CC = gcc
CCDEPMODE = depmode=none
CCLD = gcc
CFLAGS = -g -O2 -g -Wall -Wstrict-prototypes -Wmissing-prototypes
CFLAGS32 = no
CLANG_CXXFLAGS = 
CLANG_LDFLAGS = 
CLANG_LIBDIR = 
CLASSPATH = /home/bronevet/Downloads/rose/compile/../src/3rdPartyLibraries/antlr-jars/antlr-3.3-complete.jar:/home/bronevet/Downloads/rose/compile/../src/3rdPartyLibraries/fortran-parser/OpenFortranParser-20111001.jar
CLOOG_PATH = 
CONVENIENCE_LTDL_FALSE = #
CONVENIENCE_LTDL_TRUE = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS =  -g -Wall
CXXLD = g++
CXX_DEBUG = -g
CXX_OPTIMIZE = 
CXX_SHARED_LIB_UPDATE = ${CXX} -shared -o
CXX_STATIC_LIB_UPDATE = ${AR} ruv
CXX_TEMPLATE_OBJECTS = 
CXX_TEMPLATE_REPOSITORY_PATH = $(top_builddir)/src
CXX_WARNINGS = -Wall
CYGPATH_W = echo
C_DEBUG = -g
C_OPTIMIZE = 
C_WARNINGS = -Wall -Wstrict-prototypes -Wmissing-prototypes
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT_TO_GML_TRANSLATOR_FALSE = 
DOT_TO_GML_TRANSLATOR_TRUE = #
DOXYGEN_ADDED_DIRECTORY_1 = @top_pwd@/src/frontend/SageIII
DOXYGEN_ADDED_DIRECTORY_2 = /home/bronevet/Downloads/rose/compile/../src/frontend/SageIII
DOXYGEN_ENABLED_SECTIONS = documentDevelopmentVersionUsingDoxygen
DOXYGEN_EXTRACT_ALL = YES
DOXYGEN_EXTRACT_PRIVATE = YES
DOXYGEN_EXTRACT_STATIC = YES
DOXYGEN_HIDE_FRIEND_COMPOUNDS = NO
DOXYGEN_HIDE_UNDOC_CLASSES = NO
DOXYGEN_HIDE_UNDOC_MEMBERS = NO
DOXYGEN_INTERNAL_DOCS = YES
DOXYGEN_USE_TAG_FILE = 
DSYMUTIL = 
DUMPBIN = 
DWARF_INCLUDE = 
DWARF_LINK = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_I386_FALSE = 
ENABLE_I386_TRUE = #
ENABLE_JAVAPORT_FALSE = 
ENABLE_JAVAPORT_TRUE = #
ETHER_PREFIX = 
EXE = 
EXEEXT = 
FGREP = /bin/grep -F
FLTK_include_path = 
FLTK_libs_path = 
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = GNU-4.4
GEN_BE = sage_gen_be.o
GFORTRAN_PATH = /usr/bin/gfortran
GHCBIN = 
GLUT_include_path = 
GLUT_libs_path = 
GL_CFLAGS = 
GL_LIBS = 
GMP_INCLUDE_PATH = 
GMP_INSTALL_PATH = 
GMP_LIBRARY_PATH = 
GREP = /bin/grep
GraphViz_include_path = 
GraphViz_libs_path = 
HAS_LIBRARY_CURL_FALSE = 
HAS_LIBRARY_CURL_TRUE = #
HS_CONFIG_OPTS = --prefix=/home/bronevet/apps/rose --user
INCLTDL = -I${top_srcdir}/libltdl
INCLUDE_COMPASS_MAKEFILE_INC = include compass_makefile.inc
INDENT = indent
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_LTDL_FALSE = 
INSTALL_LTDL_TRUE = #
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSURE_OPTIONS = 
ISL_INCLUDE_PATH = 
ISL_INSTALL_PATH = 
ISL_LIBRARY_PATH = 
IntelPin_path = 
JAR = /usr/java/jdk1.7.0_04/bin/jar
JAVA = /usr/java/jdk1.7.0_04/bin/java
JAVAC = /usr/java/jdk1.7.0_04/bin/javac
JAVAH = /usr/java/jdk1.7.0_04/bin/javah
JAVA_JVM_INCLUDE = -I/usr/java/jdk1.7.0_04/include -I/usr/java/jdk1.7.0_04/include/linux
JAVA_JVM_LINK = -L/usr/java/jdk1.7.0_04/jre/lib/amd64/server -ljvm
JAVA_PATH = /usr/java/jdk1.7.0_04
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBADD_DL = -ldl 
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBFFI_CFLAGS = 
LIBFFI_LIBS = 
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBS = 
LIBS_WITH_RPATH = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --quiet
LIPO = 
LLVM_CONFIG = 
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = rose_config.h
LT_DLLOADERS =  dlopen.la
LT_DLPREOPEN = -dlpreopen dlopen.la 
MAKEINFO = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run makeinfo
MAPLE_INCLUDES = 
MAPLE_LIBS = 
MD5 = md5sum
MINT = $(top_builddir)/projects/mint/src/mint
MOC = NONE/moc
MPICXX = 
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_INCLUDE = 
MYSQL_LDFLAGS = 
MYSQL_VERSION = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJ = .o
OBJDUMP = objdump
OBJEXT = o
OLD_COMPILER_VERSION_FALSE = 
OLD_COMPILER_VERSION_TRUE = #
OPEN_FORTRAN_PARSER_PATH = /src/3rdPartyLibraries/fortran-parser
OPTIONAL_PROJECTS = 
OS_32BIT_FALSE = 
OS_32BIT_TRUE = #
OS_64BIT_FALSE = #
OS_64BIT_TRUE = 
OS_LINUX_FALSE = #
OS_LINUX_TRUE = 
OS_MACOSX_FALSE = 
OS_MACOSX_TRUE = #
OS_MINGW_FALSE = 
OS_MINGW_TRUE = #
OS_MSDOS_FALSE = 
OS_MSDOS_TRUE = #
OS_VENDOR_APPLE_FALSE = 
OS_VENDOR_APPLE_TRUE = #
OS_VENDOR_CENTOS_FALSE = #
OS_VENDOR_CENTOS_TRUE = 
OS_VENDOR_DEBIAN_FALSE = 
OS_VENDOR_DEBIAN_TRUE = #
OS_VENDOR_REDHAT_32BIT_FALSE = 
OS_VENDOR_REDHAT_32BIT_TRUE = #
OS_VENDOR_REDHAT_FALSE = 
OS_VENDOR_REDHAT_TRUE = #
OS_VENDOR_UBUNTU_FALSE = 
OS_VENDOR_UBUNTU_TRUE = #
OS_release = 6.2
OS_vendor = CentOS
OTOOL = 
OTOOL64 = 
PACKAGE = rose
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ROSE
PACKAGE_STRING = ROSE 0.9.5a
PACKAGE_TARNAME = rose
PACKAGE_VERSION = 0.9.5a
PACKAGE_VERSION_NUMERIC = 0.9.5.1
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
POET_INCL = -I$(poet_dir)
POET_LIB = 
PPL_PATH = 
PURIFY_OPTIONS = -windows=no -recursion-depth-limit=40000 -chain-length=24 -first-only=yes -leaks-at-exit=no -inuse-at-exit=no -always-use-cache-dir=yes -cache-dir=/home/bronevet/tmp -best-effort 
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_SITE_PKG = 
Pxx_INCLUDES = 
Pxx_LIBS = 
QROSE_PREFIX = 
QROSE_USE_MINGW32_FALSE = 
QROSE_USE_MINGW32_TRUE = #
QROSE_USE_WINDOWS_FALSE = 
QROSE_USE_WINDOWS_TRUE = #
QT_INCLUDES = -DQT3_SUPPORT -INONE/QtCore -INONE/QtGui -INONE/Qt3Support -INONE/QtXml -INONE
QT_LDFLAGS = -LNONE -lQtCore -lQtGui -lQt3Support -lQtXml -lQtUiTools
QT_VERSION = 
QT_VERSION_MAJOR = 
QT_VERSION_MINOR = 
RANLIB = ranlib
RCC = NONE/rcc
ROSEHPCT_DEP_INCLUDES = 
ROSEHPCT_DEP_LIBS = 
ROSE_BOOST_NORMAL_INCLUDE_PATH = 

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use). 
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = -isystem /home/bronevet/apps/boost/include
ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE = #
ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE = 
ROSE_BUILD_COMPASS2_FALSE = 
ROSE_BUILD_COMPASS2_TRUE = #
ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_EDG_WITH_CUDA_SUPPORT_FALSE = 
ROSE_BUILD_EDG_WITH_CUDA_SUPPORT_TRUE = #
ROSE_BUILD_EDG_WITH_OPENCL_SUPPORT_FALSE = 
ROSE_BUILD_EDG_WITH_OPENCL_SUPPORT_TRUE = #
ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_OS_IS_CYGWIN_FALSE = 
ROSE_BUILD_OS_IS_CYGWIN_TRUE = #
ROSE_BUILD_OS_IS_OSX_FALSE = 
ROSE_BUILD_OS_IS_OSX_TRUE = #
ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE = #
ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE = 
ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_FALSE = 
ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_TRUE = #
ROSE_BUILD_ROSEHPCT_FALSE = 
ROSE_BUILD_ROSEHPCT_TRUE = #
ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE = #
ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE = 
ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE = #
ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE = 
ROSE_EDG_MAJOR_VERSION_NUMBER = 3
ROSE_EDG_MINOR_VERSION_NUMBER = 3
ROSE_HAS_EDG_SOURCE_FALSE = 
ROSE_HAS_EDG_SOURCE_TRUE = #
ROSE_HAVE_LIBYICES_FALSE = 
ROSE_HAVE_LIBYICES_TRUE = #
ROSE_HAVE_YICES_FALSE = 
ROSE_HAVE_YICES_TRUE = #
ROSE_HOME = .
ROSE_LSB_RELEASE = lsb_release
ROSE_MPI_FALSE = 
ROSE_MPI_TRUE = #
ROSE_OBJDUMP_PATH = objdump
ROSE_OFP_CONTAINS_JAVA_FILE_FALSE = 
ROSE_OFP_CONTAINS_JAVA_FILE_TRUE = #
ROSE_OFP_JAR_FILE = OpenFortranParser-20111001.jar
ROSE_OFP_MAJOR_VERSION_NUMBER = 0
ROSE_OFP_MINOR_VERSION_NUMBER = 8
ROSE_OFP_PATCH_VERSION_NUMBER = 3
ROSE_OFP_VERSION_NUMBER = 20111001
ROSE_PCH_FALSE = 
ROSE_PCH_TRUE = #
ROSE_PS2PDF_PATH = ps2pdf
ROSE_SUPPORT_GNU_EXTENSIONS = FALSE
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = FALSE
ROSE_USE_ASSEMBLY_SEMANTICS_FALSE = 
ROSE_USE_ASSEMBLY_SEMANTICS_TRUE = #
ROSE_USE_BDDBDDB_FALSE = 
ROSE_USE_BDDBDDB_TRUE = #
ROSE_USE_BINARYCONTEXTLOOKUP_FALSE = 
ROSE_USE_BINARYCONTEXTLOOKUP_TRUE = #
ROSE_USE_BOOST_WAVE_FALSE = #
ROSE_USE_BOOST_WAVE_TRUE = 
ROSE_USE_CANDL = 
ROSE_USE_CANDL_FALSE = 
ROSE_USE_CANDL_TRUE = #
ROSE_USE_CLANG_FRONTEND = 
ROSE_USE_CLANG_FRONTEND_FALSE = 
ROSE_USE_CLANG_FRONTEND_TRUE = #
ROSE_USE_CLOOG = 
ROSE_USE_CLOOG_FALSE = 
ROSE_USE_CLOOG_TRUE = #
ROSE_USE_CUDA_SUPPORT = 7
ROSE_USE_CUDA_SUPPORT_FALSE = 
ROSE_USE_CUDA_SUPPORT_TRUE = #
ROSE_USE_DWARF_FALSE = 
ROSE_USE_DWARF_TRUE = #
ROSE_USE_EDG_VERSION_4_3_FALSE = 
ROSE_USE_EDG_VERSION_4_3_TRUE = #
ROSE_USE_EDG_VERSION_4_FALSE = 
ROSE_USE_EDG_VERSION_4_TRUE = #
ROSE_USE_ETHER_FALSE = 
ROSE_USE_ETHER_TRUE = #
ROSE_USE_GCC_OMP_FALSE = 
ROSE_USE_GCC_OMP_TRUE = #
ROSE_USE_GRAPHVIZ_DOT_FALSE = 
ROSE_USE_GRAPHVIZ_DOT_TRUE = #
ROSE_USE_IDA_FALSE = 
ROSE_USE_IDA_TRUE = #
ROSE_USE_INDENT_FALSE = #
ROSE_USE_INDENT_TRUE = 
ROSE_USE_INSURE_FALSE = 
ROSE_USE_INSURE_TRUE = #
ROSE_USE_INTEL_PIN_FALSE = 
ROSE_USE_INTEL_PIN_TRUE = #
ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE = 
ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE = #
ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE = #
ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE = 
ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE = #
ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE = 
ROSE_USE_LIBFFI_FALSE = 
ROSE_USE_LIBFFI_TRUE = #
ROSE_USE_LIBNUMA_FALSE = 
ROSE_USE_LIBNUMA_TRUE = #
ROSE_USE_LLVM_FALSE = 
ROSE_USE_LLVM_TRUE = #
ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE = 
ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE = #
ROSE_USE_MAPLE_FALSE = 
ROSE_USE_MAPLE_TRUE = #
ROSE_USE_MYSQL_FALSE = 
ROSE_USE_MYSQL_TRUE = #
ROSE_USE_NEW_EDG_INTERFACE_FALSE = 
ROSE_USE_NEW_EDG_INTERFACE_TRUE = #
ROSE_USE_OBJDUMP_FALSE = #
ROSE_USE_OBJDUMP_TRUE = 
ROSE_USE_OMNI_OPENMP_FALSE = 
ROSE_USE_OMNI_OPENMP_TRUE = #
ROSE_USE_OPENCL_SUPPORT = 
ROSE_USE_OPENCL_SUPPORT_FALSE = 
ROSE_USE_OPENCL_SUPPORT_TRUE = #
ROSE_USE_OPENGL_FALSE = 
ROSE_USE_OPENGL_TRUE = #
ROSE_USE_PHP_FALSE = 
ROSE_USE_PHP_TRUE = #
ROSE_USE_PPL = 
ROSE_USE_PPL_FALSE = 
ROSE_USE_PPL_TRUE = #
ROSE_USE_PS2PDF_FALSE = #
ROSE_USE_PS2PDF_TRUE = 
ROSE_USE_PYTHON_FALSE = #
ROSE_USE_PYTHON_TRUE = 
ROSE_USE_QROSE_FALSE = 
ROSE_USE_QROSE_TRUE = #
ROSE_USE_QT_FALSE = 
ROSE_USE_QT_TRUE = #
ROSE_USE_RTED_FALSE = 
ROSE_USE_RTED_TRUE = #
ROSE_USE_SAT_FALSE = 
ROSE_USE_SAT_TRUE = #
ROSE_USE_SCOPLIB = 
ROSE_USE_SCOPLIB_FALSE = 
ROSE_USE_SCOPLIB_TRUE = #
ROSE_USE_SMALLER_GENERATED_FILES_FALSE = 
ROSE_USE_SMALLER_GENERATED_FILES_TRUE = #
ROSE_USE_SQLITE_DATABASE_FALSE = 
ROSE_USE_SQLITE_DATABASE_TRUE = #
ROSE_USE_SSL_SUPPORT_FALSE = 
ROSE_USE_SSL_SUPPORT_TRUE = #
ROSE_USE_TCLSH_FALSE = 
ROSE_USE_TCLSH_TRUE = #
ROSE_USE_TEST_SMT_SOLVER_FALSE = 
ROSE_USE_TEST_SMT_SOLVER_TRUE = #
ROSE_USE_TRACE_ANALYSIS_FALSE = 
ROSE_USE_TRACE_ANALYSIS_TRUE = #
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = 
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE = 
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE = #
ROSE_USE_VISUALIZATION_FALSE = 
ROSE_USE_VISUALIZATION_TRUE = #
ROSE_USE_WGET_FALSE = #
ROSE_USE_WGET_TRUE = 
ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE = 
ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE = #
ROSE_USE_XML_FALSE = 
ROSE_USE_XML_TRUE = #
ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_FALSE = 
ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_TRUE = #
ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_FALSE = 
ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_TRUE = #
ROSE_USING_BOOST_VERSION_1_35_FALSE = 
ROSE_USING_BOOST_VERSION_1_35_TRUE = #
ROSE_USING_BOOST_VERSION_1_36_FALSE = 
ROSE_USING_BOOST_VERSION_1_36_TRUE = #
ROSE_USING_BOOST_VERSION_1_37_FALSE = 
ROSE_USING_BOOST_VERSION_1_37_TRUE = #
ROSE_USING_BOOST_VERSION_1_38_FALSE = 
ROSE_USING_BOOST_VERSION_1_38_TRUE = #
ROSE_USING_BOOST_VERSION_1_39_FALSE = 
ROSE_USING_BOOST_VERSION_1_39_TRUE = #
ROSE_USING_BOOST_VERSION_1_40_FALSE = 
ROSE_USING_BOOST_VERSION_1_40_TRUE = #
ROSE_USING_BOOST_VERSION_1_41_FALSE = 
ROSE_USING_BOOST_VERSION_1_41_TRUE = #
ROSE_USING_BOOST_VERSION_1_42_FALSE = 
ROSE_USING_BOOST_VERSION_1_42_TRUE = #
ROSE_USING_BOOST_VERSION_1_43_FALSE = 
ROSE_USING_BOOST_VERSION_1_43_TRUE = #
ROSE_USING_BOOST_VERSION_1_44_FALSE = 
ROSE_USING_BOOST_VERSION_1_44_TRUE = #
ROSE_USING_BOOST_VERSION_1_45_FALSE = 
ROSE_USING_BOOST_VERSION_1_45_TRUE = #
ROSE_USING_BOOST_VERSION_1_46_FALSE = 
ROSE_USING_BOOST_VERSION_1_46_TRUE = #
ROSE_USING_BOOST_VERSION_1_47_FALSE = 
ROSE_USING_BOOST_VERSION_1_47_TRUE = #
ROSE_USING_BOOST_VERSION_1_48_FALSE = 
ROSE_USING_BOOST_VERSION_1_48_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_0_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_0_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_1_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_1_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_2_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_2_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_4_FALSE = #
ROSE_USING_GFORTRAN_VERSION_4_4_TRUE = 
ROSE_USING_GFORTRAN_VERSION_4_5_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_5_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_6_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_6_TRUE = #
ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE = 
ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE = #
ROSE_USING_ROSE_ANALYSIS_FALSE = 
ROSE_USING_ROSE_ANALYSIS_TRUE = #
ROSE_USING_ROSE_AST_FILE_IO_FALSE = 
ROSE_USING_ROSE_AST_FILE_IO_TRUE = #
ROSE_USING_ROSE_CODE_GENERATION_FALSE = 
ROSE_USING_ROSE_CODE_GENERATION_TRUE = #
ROSE_USING_ROSE_FALSE = 
ROSE_USING_ROSE_TRANSLATOR_FALSE = 
ROSE_USING_ROSE_TRANSLATOR_TRUE = #
ROSE_USING_ROSE_TRUE = #
ROSE_WGET_PATH = wget
ROSE_WITH_GMP_FALSE = 
ROSE_WITH_GMP_INCLUDE_FALSE = 
ROSE_WITH_GMP_INCLUDE_TRUE = #
ROSE_WITH_GMP_TRUE = #
ROSE_WITH_ISL_FALSE = 
ROSE_WITH_ISL_INCLUDE_FALSE = 
ROSE_WITH_ISL_INCLUDE_TRUE = #
ROSE_WITH_ISL_TRUE = #
ROSE_WITH_ROSEQT_FALSE = 
ROSE_WITH_ROSEQT_TRUE = #
ROSE_WITH_UPC_FALSE = 
ROSE_WITH_UPC_TRUE = #
ROSE_YICES = 
ROSE_YICES_PREFIX = 
RT_LIBS = -lrt -ldl -ldl 
SCOPLIB_PATH = 
SED = sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3_CFLAGS = 
SQLITE3_LDFLAGS = 
SQLITE3_VERSION = 
STRIP = strip
SWIG = /usr/bin/swig -c++
SWIG_LIB = /usr/share/swig/1.3.40
TCLSH = 
TEST_SMT_SOLVER = 
UIC = NONE/uic
UPC = 
UPCDEPMODE = 
UPCFLAGS = 
USE_BINARY_ANALYSIS_TESTS_FALSE = #
USE_BINARY_ANALYSIS_TESTS_TRUE = 
USE_GCJ_FALSE = 
USE_GCJ_TRUE = #
USE_HASKELL_FALSE = 
USE_HASKELL_TRUE = #
USE_ROSE_GLUT_SUPPORT_FALSE = 
USE_ROSE_GLUT_SUPPORT_TRUE = #
USE_ROSE_IN_BUILD_TREE_VAR_FALSE = 
USE_ROSE_IN_BUILD_TREE_VAR_TRUE = #
USE_VALGRIND_FALSE = 
USE_VALGRIND_TRUE = #
USING_GCC_3_4_4_BACKEND_COMPILER_FALSE = 
USING_GCC_3_4_4_BACKEND_COMPILER_TRUE = #
USING_GCC_4_0_4_BACKEND_COMPILER_FALSE = 
USING_GCC_4_0_4_BACKEND_COMPILER_TRUE = #
USING_GNU_COMPILER_FALSE = #
USING_GNU_COMPILER_TRUE = 
USING_INTEL_COMPILER_FALSE = 
USING_INTEL_COMPILER_TRUE = #
USING_WINDOWS = 0
USING_XTENSA_BACKEND_COMPILER_FALSE = 
USING_XTENSA_BACKEND_COMPILER_TRUE = #
VALGRIND_BINARY = 
VERSION = 0.9.5a
WITH_GOMP_OPENMP_LIB_FALSE = 
WITH_GOMP_OPENMP_LIB_TRUE = #
XERCES_CPPFLAGS = 
XERCES_LDFLAGS = 
XERCES_LIBS = 
XERCES_VERSION = 
XMKMF = 
XML2_CONFIG = no
XML_CPPFLAGS = 
XML_LIBS = 
X_CFLAGS =  -INONE
X_EXTRA_LIBS = 
X_LIBS =  -LNONE
X_PRE_LIBS = 
YACC = bison -y
YFLAGS = 
absolute_path_srcdir = /home/bronevet/Downloads/rose
ac_boost_path = /home/bronevet/apps/boost
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_MPICXX = 
ac_ct_UPC = 
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__fastdepUPC_FALSE = 
am__fastdepUPC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
backstroke_ross_path = 
backstroke_speedes_path = 
bddbddb_path = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_triplet_without_redhat = x86_64-pc-linux-gnu
build_vendor = unknown
configure_date = Friday July 27 15:54:01 2012
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
dwarf_path = 
edg_union_struct_debugging_value = union
exec_prefix = ${prefix}
glut_path = 
gomp_omp_runtime_library_path = 
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
ida_path = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bronevet/Downloads/rose/config/install-sh
insure_BIN = 
insure_LIBS = 
insure_PREFIX = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
llvm_path = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${datarootdir}/man
maple_path = 
mkdir_p = mkdir -p --
oldincludedir = /usr/include
omni_omp_runtime_support_path = 
optional_Visualization_subdirs = 
parallel_ast_traversal_omp_path = 
pdfdir = ${docdir}
php_path = 
poet_dir = /src/3rdPartyLibraries/POET
prefix = /home/bronevet/apps/rose
program_transform_name = s,x,x,
psdir = ${docdir}
purify_BIN = 
purify_INCLUDES = 
purify_LIBS = 
purify_PREFIX = 
rted_path = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs =  libltdl src/3rdPartyLibraries/libharu-2.1.0
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_pwd = /home/bronevet/Downloads/rose/compile
wine_path = 

# SQLite is a simpler database to use than MySQL
#ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
#SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
#SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
#ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
#ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
#ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
#ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library 
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
#ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
#ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
#ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
#ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
#ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
#ROSE_ROSEHPCT_LIBS = -lrosehpct
#ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
#ROSE_YICES_INCLUDES = -I/include
#ROSE_YICES_LIBS = -lyices
#ROSE_YICES_LIBS_WITH_PATH = /lib/libyices.a
GLUT_LIBS = ${glut_path}

# ROSE-DWARF libdwarf support
#ROSE_DWARF_INCLUDES = -I$(dwarf_path)
# DQ (3/15/2009): Use the usual static linking when not using Intel Pin (what we used to do).
# DQ (3/13/2009): Fixup libdwarf support in ROSE to always use the dynamic (shared) library.
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(dwarf_path) -L$(dwarf_path) -ldwarf -lelf
# DQ (6/5/2010): Fixed to use the value set in the configure step (requires the dynamic library).
# ROSE_DWARF_LIBS_WITH_PATH = $(dwarf_path)/libdwarf.a -lelf
#ROSE_DWARF_LIBS_WITH_PATH = 

# DQ (3/13/2009): These do not appear to be used anywhere.
# ROSE_DWARF_LIBS = -ldwarf
# ROSE_DWARF_LIB_FILE = libdwarf.a

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for 
# dwarf when used with Intel Pin.
# ROSE_DWARF_LIBS_WITH_PATH = $(INTEL_PIN_PATH)/intel64/lib-ext/libdwarf.a -lelf
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(INTEL_PIN_PATH)/intel64/lib-ext -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
##ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
##INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
#ROSE_WINE_INCLUDES = -I$(wine_path)/include
#ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
#ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
#ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
#ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
#ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
#	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
#	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
#	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
#	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
#	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
#	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
#	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
#	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
#	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
#	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
#	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
#	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
#	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
#	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
#	-lLLVMInstrumentation -lLLVMJIT \
#	-lLLVMExecutionEngine -lLLVMCppBackend \
#	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
#	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
#	-lLLVMCBackend -lLLVMCBackendInfo \
#	-lLLVMBlackfinCodeGen \
#	-lLLVMBlackfinAsmPrinter \
#	-lLLVMBlackfinInfo -lLLVMBitWriter \
#	-lLLVMX86Disassembler -lLLVMX86AsmParser \
#	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
#	-lLLVMX86Info -lLLVMAsmParser \
#	-lLLVMARMAsmParser -lLLVMMCParser \
#	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
#	-lLLVMARMInfo -lLLVMArchive \
#	-lLLVMBitReader -lLLVMAlphaCodeGen \
#	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
#	-lLLVMAsmPrinter -lLLVMCodeGen \
#	-lLLVMScalarOpts -lLLVMInstCombine \
#	-lLLVMTransformUtils -lLLVMipa \
#	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
#	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
#	-lLLVMSystem

# adding all libraries for now

# SSL support permits use of MD5 checksums internally for binary library identification.
#ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
#ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
#INTEL_PIN_PATH = 
#INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
#INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
#INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_USE_DWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
#ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
#ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
ROSE_INCLUDES = \
     $(ROSE_BOOST_PREINCLUDE_PATH) \
     -I$(top_builddir)/src/roseSupport \
     -I$(top_builddir)/src/frontend/SageIII \
     -I$(top_srcdir)/src \
     -I$(top_srcdir)/src/frontend/SageIII \
     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
     -I$(top_srcdir)/src/frontend/PHPFrontend \
     -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend \
     -I$(top_srcdir)/src/frontend/PythonFrontend \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
     -I$(top_srcdir)/src/frontend/BinaryFormats \
     -I$(top_srcdir)/src/frontend/BinaryLoader \
     -I$(top_srcdir)/src/frontend/Disassemblers \
     -I$(top_srcdir)/src/frontend/CxxFrontend/Clang \
     -I$(top_srcdir)/src/backend/unparser \
     -I$(top_srcdir)/src/backend/unparser/formatSupport \
     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
     -I$(top_srcdir)/src/backend/asmUnparser \
     -I$(top_srcdir)/src/util \
     -I$(top_srcdir)/src/util/support \
     -I$(top_srcdir)/src/util/graphs  \
     -I$(top_srcdir)/src/util/stringSupport \
     -I$(top_srcdir)/src/util/commandlineProcessing \
     -I$(top_srcdir)/src/midend/abstractHandle \
     -I$(top_srcdir)/src/midend/abstractMemoryObject \
     -I$(top_srcdir)/src/midend/astDiagnostics \
     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
     -I$(top_srcdir)/src/midend/astProcessing \
     -I$(top_srcdir)/src/midend/astQuery \
     -I$(top_srcdir)/src/midend/astRewriteMechanism \
     -I$(top_srcdir)/src/midend/astUtil/annotation \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/src/midend/astUtil/astSupport \
     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
     -I$(top_srcdir)/src/midend/binaryAnalyses \
     -I$(top_srcdir)/src/midend/binaryAnalyses/dataflowanalyses \
     -I$(top_srcdir)/src/midend/binaryAnalyses/instructionSemantics \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
     -I$(top_srcdir)/src/midend/programAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/graphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
      $(ROSE_SIDEEFFECTS_INCLUDE) \
      $(ROSE_DATABASE_INCLUDE) \
      $(ROSE_GUI_INCLUDE) \
      $(ROSE_QT_INCLUDE) \
      $(ROSE_SQLITE_DATABASE_INCLUDE) \
			$(ROSE_SIDEEFFECT_INCLUDE) \
      $(SQLITE_DATABASE_INCLUDE) \
     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
     -I$(top_srcdir)/src/roseSupport \
     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
     -I$(top_srcdir)/src/util/graphs \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/libltdl \
     $(ROSE_PHP_INCLUDES) \
     $(ROSE_PYTHON_INCLUDES) \
     $(ROSE_YICES_INCLUDES) \
     $(ROSE_DWARF_INCLUDES) \
     $(ROSE_WINE_INCLUDES) \
     $(VALGRIND_CFLAGS) \
     $(SQLITE3_CFLAGS) \
     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA \
     $(ROSE_PCH_INCLUDE) \
     $(INTEL_PIN_INCLUDE_PATHS) \
     $(ROSE_ETHER_INCLUDE)


# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the 
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
#ROSE_INCLUDES = \
#     $(ROSE_BOOST_PREINCLUDE_PATH) \
#     -I$(top_builddir)/src/roseSupport \
#     -I$(top_builddir)/src/frontend/SageIII \
#     -I$(top_srcdir)/src \
#     -I$(top_srcdir)/src/frontend/SageIII \
#     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
#     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
#     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
#     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
#     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
#     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
#     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
#     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
#     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
#     -I$(top_srcdir)/src/frontend/BinaryFormats \
#     -I$(top_srcdir)/src/frontend/BinaryLoader \
#     -I$(top_srcdir)/src/frontend/Disassemblers \
#     -I$(top_srcdir)/src/backend/unparser \
#     -I$(top_srcdir)/src/backend/unparser/formatSupport \
#     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
#     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
#     -I$(top_srcdir)/src/backend/asmUnparser \
#     -I$(top_srcdir)/src/util \
#     -I$(top_srcdir)/src/util/support \
#     -I$(top_srcdir)/src/util/graphs  \
#     -I$(top_srcdir)/src/util/stringSupport \
#     -I$(top_srcdir)/src/util/commandlineProcessing \
#     -I$(top_srcdir)/src/midend/astDiagnostics \
#     -I$(top_srcdir)/src/midend/astProcessing \
#     -I$(top_srcdir)/src/midend/astQuery \
#     -I$(top_srcdir)/src/midend/binaryAnalyses \
#     -I$(top_srcdir)/src/midend/programAnalysis \
#     -I$(top_srcdir)/src/roseSupport \
#     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
#     -I$(top_srcdir)/src/util/graphs \
#     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA 


# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph 
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer 
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they 
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently 
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)
ROSE_LIBS = $(top_builddir)/src/librose.la -lm  $(JAVA_JVM_LINK) \
  $(SQLITE_DATABASE_LIBS) $(QT_LIBS)  $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(SQLITE3_LDFLAGS)  $(RT_LIBS) \
  $(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
  $(ROSE_GUI_LIBS_WITH_PATH) $(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
  $(ROSE_INTEL_COMPILER_MATH_LIBS)


# DQ (3/13/2009): Removed this from ROSE_LIBS because libtool warnings say it should be in AM_LDFLAGS
# (this is because it has been moved from being linked statically to being linked dynamically).
# $(ROSE_DWARF_LIBS_WITH_PATH)
# AM_LDFLAGS = $(ROSE_DWARF_LIBS_WITH_PATH)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext
# DQ (3/14/2009): Need to add rpath to LDFLAGS instead of LDADD (to follow libtool rules).
# LDFLAGS += $(ROSE_DWARF_LIBS_WITH_PATH)

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)
#   $(LIB_QT) $(JAVA_JVM_LIB) 

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS 

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly 
# with make distcheck rule 
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Location of sample binary files (executables, libraries, etc) that serve as input to
# some of the binary analysis tests.
BINARY_SAMPLES = $(top_srcdir)/binaries/samples

# Test harness variables. See "rth_run.pl --help" for more info.
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl \
	srcdir=$(srcdir) top_srcdir=$(top_srcdir) \
	VALGRIND=$(VALGRIND) BINARY_SAMPLES=$(BINARY_SAMPLES)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl

# DQ (9/27/2010): These directories are from gfortran tests.
SUBDIRS = 

# Shorten the list of code to compile to simplify checks using "make distcheck"
F90_TESTCODES_REQUIRED_TO_PASS = \
   PR19754_2.f90 \
   PR40660.f90 \
   Wall.f90 \
   Wno-all.f90 \
   achar_1.f90 \
   actual_pointer_function_1.f90 \
   actual_procedure_1.f90 \
   advance_1.f90 \
   advance_2.f90 \
   advance_4.f90 \
   advance_5.f90


# #######################
#      PASSING TESTS
# #######################

# Configure-time automake conditional

# This is the long test of ROSE (takes a while!)

# Allow retesting of examples that failed when using gfortran (version 4.2.4) for syntax checking.
#F90_TESTCODES_REQUIRED_TO_PASS = $(OCT_1_2010_F90_TESTCODES_REQUIRED_TO_PASS) \
#	$(OCT_1_2010_PREVIOUSLY_PASSING_F90_TESTCODES_REQUIRED_TO_PASS)

# Shorten the list of code to compile to simplify checks using "make distcheck"
F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS =  \
	PR19872.f \
	allocate_zerosize_3.f \
	array_constructor_type_9.f \
	backslash_3.f \
	bounds_check_13.f \
	bounds_check_2.f \
	$(OPENMP_TESTS_F77_TESTCODES_REQUIRED_TO_PASS)

# This is the long test of ROSE (takes a while!)
#F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS = $(OCT_1_2010_F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS) \
#	$(OPENMP_TESTS_F77_TESTCODES_REQUIRED_TO_PASS)
OCT_1_2010_F90_TESTCODES_REQUIRED_TO_PASS = \
   access_spec_1.f90 \
   access_spec_3.f90 \
   achar_1.f90 \
   achar_2.f90 \
   achar_4.f90 \
   actual_array_constructor_3.f90 \
   actual_array_interface_1.f90 \
   actual_array_result_1.f90 \
   actual_pointer_function_1.f90 \
   actual_procedure_1.f90 \
   advance_1.f90 \
   advance_2.f90 \
   advance_4.f90 \
   advance_5.f90 \
   aint_anint_1.f90 \
   aliasing_dummy_2.f90 \
   aliasing_dummy_3.f90 \
   aliasing_dummy_4.f90 \
   aliasing_dummy_5.f90 \
   all_bounds_1.f90 \
   alloc_alloc_expr_2.f90 \
   allocatable_dummy_1.f90 \
   allocatable_dummy_3.f90 \
   allocatable_function_1.f90 \
   allocatable_function_3.f90 \
   allocatable_function_4.f90 \
   allocatable_module_1.f90 \
   allocate_char_star_scalar_1.f90 \
   allocate_error_1.f90 \
   allocate_zerosize_1.f90 \
   allocate_zerosize_2.f90 \
   and_or_xor.f90 \
   anint_1.f90 \
   any_all_1.f90 \
   any_all_2.f90 \
   anyallcount_1.f90 \
   append_1.f90 \
   argument_checking_1.f90 \
   arithmetic_if.f90 \
   array_1.f90 \
   array_2.f90 \
   array_3.f90 \
   array_4.f90 \
   array_alloc_1.f90 \
   array_alloc_2.f90 \
   array_alloc_3.f90 \
   array_constructor_1.f90 \
   array_constructor_10.f90 \
   array_constructor_11.f90 \
   array_constructor_12.f90 \
   array_constructor_13.f90 \
   array_constructor_14.f90 \
   array_constructor_15.f90 \
   array_constructor_16.f90 \
   array_constructor_19.f90 \
   array_constructor_22.f90 \
   array_constructor_33.f90 \
   array_constructor_35.f90 \
   array_constructor_4.f90 \
   array_constructor_5.f90 \
   array_constructor_6.f90 \
   array_constructor_7.f90 \
   array_constructor_8.f90 \
   array_constructor_9.f90 \
   array_function_1.f90 \
   array_function_2.f90 \
   array_function_3.f90 \
   array_function_4.f90 \
   array_initializer_2.f90 \
   array_memcpy_1.f90 \
   array_memcpy_3.f90 \
   array_memcpy_4.f90 \
   array_memcpy_5.f90 \
   array_memset_1.f90 \
   array_memset_2.f90 \
   array_reference_1.f90 \
   array_return_value_1.f90 \
   array_section_1.f90 \
   array_section_2.f90 \
   array_simplify_1.f90 \
   array_temporaries_1.f90 \
   array_temporaries_2.f90 \
   array_temporaries_3.f90 \
arrayio_1.f90 \
   arrayio_10.f90 \
   arrayio_11.f90 \
   arrayio_12.f90 \
   arrayio_2.f90 \
arrayio_3.f90 \
   arrayio_4.f90 \
   arrayio_5.f90 \
arrayio_6.f90 \
   arrayio_7.f90 \
   arrayio_derived_1.f90 \
   arrayio_derived_2.f90 \
   assign_10.f90 \
   assign_9.f90 \
   assign_func_dtcomp_1.f90 \
   assignment_1.f90 \
   assignment_3.f90 \
   associated_1.f90 \
   associated_2.f90 \
   associated_4.f90 \
   associated_5.f90 \
   associated_target_2.f90 \
   assumed_charlen_arg_1.f90 \
   assumed_charlen_function_2.f90 \
   assumed_charlen_function_3.f90 \
   assumed_charlen_function_5.f90 \
   assumed_charlen_needed_1.f90 \
   assumed_charlen_sharing.f90 \
   assumed_dummy_1.f90 \
   assumed_len.f90 \
   assumed_present.f90 \
   assumed_shape_ranks_2.f90 \
   assumed_size_refs_3.f90 \
   auto_array_1.f90 \
   auto_char_dummy_array_1.f90 \
   auto_char_len_3.f90 \
   auto_char_pointer_array_result_1.f90 \
   auto_pointer_array_result_1.f90 \
   automatic_char_len_2.f90 \
   automatic_default_init_1.f90 \
   backslash_1.f90 \
   backslash_2.f90 \
   backspace_7.f90 \
   bessel_1.f90 \
   bessel_2.f90 \
   besxy.f90 \
   bound_1.f90 \
   bound_2.f90 \
   bound_3.f90 \
   bound_4.f90 \
   bound_5.f90 \
   bound_6.f90 \
   bound_7.f90 \
   bound_8.f90 \
   bound_simplification_1.f90 \
   bound_simplification_2.f90 \
   bounds_check_1.f90 \
   bounds_check_10.f90 \
   bounds_check_14.f90 \
   bounds_check_4.f90 \
   bounds_check_5.f90 \
   bounds_check_6.f90 \
   bounds_check_7.f90 \
   bounds_check_8.f90 \
   bounds_check_9.f90 \
   bounds_check_array_ctor_1.f90 \
   bounds_check_array_ctor_2.f90 \
   bounds_check_array_ctor_4.f90 \
   bounds_check_array_ctor_6.f90 \
   bounds_check_array_ctor_7.f90 \
   bounds_check_array_ctor_8.f90 \
   bounds_check_fail_2.f90 \
   bounds_check_fail_3.f90 \
   bounds_check_fail_4.f90 \
   bounds_check_strlen_1.f90 \
   bounds_check_strlen_2.f90 \
   bounds_check_strlen_3.f90 \
   bounds_check_strlen_4.f90 \
   bounds_check_strlen_5.f90 \
   bounds_check_strlen_6.f90 \
   bounds_check_strlen_8.f90 \
   bounds_check_strlen_9.f90 \
   bounds_temporaries_1.f90 \
   boz_15.f90 \
   change_symbol_attributes_1.f90 \
   char_array_constructor_2.f90 \
   char_array_constructor_3.f90 \
   char_array_constructor.f90 \
 char_array_structure_constructor.f90 \
   char_associated_1.f90 \
   char_bounds_check_fail_1.f90 \
   char_cast_1.f90 \
   char_cast_2.f90 \
   char_component_initializer_1.f90 \
   char_component_initializer_2.f90 \
   char_cons_len.f90 \
   char_cshift_3.f90 \
   char_decl_1.f90 \
   char_expr_1.f90 \
   char_initialiser_actual.f90 \
   char_length_10.f90 \
   char_length_11.f90 \
   char_length_12.f90 \
   char_length_13.f90 \
   char_length_14.f90 \
   char_length_15.f90 \
   char_length_16.f90 \
   char_length_17.f90 \
   char_length_18.f90 \
   char_length_4.f90 \
   char_length_6.f90 \
   char_pointer_assign_3.f90 \
   char_pointer_assign_4.f90 \
   char_pointer_assign_5.f90 \
   char_pointer_assign.f90 \
   char_pointer_comp_assign.f90 \
   char_pointer_dependency.f90 \
   char_pointer_dummy.f90 \
   char_pointer_func.f90 \
   char_result_10.f90 \
   char_result_11.f90 \
   char_result_12.f90 \
   char_result_9.f90 \
   char_type_len.f90 \
   character_array_constructor_1.f90 \
   character_assign_1.f90 \
   character_comparison_3.f90 \
   chkbits.f90 \
   cmplx_intrinsic_1.f90 \
   common_1.f90 \
   common_12.f90 \
   common_2.f90 \
   common_pointer_1.f90 \
   complex_int_1.f90 \
   complex_intrinsic_1.f90 \
   complex_read.f90 \
   complex_write.f90 \
   contained_3.f90 \
   contained_equivalence_1.f90 \
   contained_module_proc_1.f90 \
   continuation_1.f90 \
   continuation_10.f90 \
   continuation_3.f90 \
   continuation_4.f90 \
   continuation_7.f90 \
   continuation_8.f90 \
   convert_1.f90 \
   convert_2.f90 \
   convert_implied_open.f90 \
   count_mask_1.f90 \
   cshift_bounds_1.f90 \
   cshift_bounds_2.f90 \
   cshift_bounds_3.f90 \
   cshift_bounds_4.f90 \
   cshift_large_1.f90 \
   cshift_nan_1.f90 \
   cshift_shift_real_2.f90 \
   ctrl-z.f90 \
   data_array_4.f90 \
   data_char_2.f90 \
 data_components_1.f90 \
   deallocate_error_1.f90 \
   deallocate_error_2.f90 \
   deallocate_stat.f90 \
   debug_1.f90 \
   default_format_1.f90 \
   default_format_2.f90 \
   default_format_denormal_1.f90 \
   default_format_denormal_2.f90 \
   default_initialization_2.f90 \
 default_initialization_3.f90 \
   dependency_1.f90 \
   dependency_10.f90 \
   dependency_11.f90 \
   dependency_12.f90 \
   dependency_13.f90 \
   dependency_14.f90 \
   dependency_15.f90 \
   dependency_16.f90 \
   dependency_17.f90 \
   dependency_18.f90 \
   dependency_2.f90 \
   dependency_20.f90 \
   dependency_21.f90 \
   dependency_22.f90 \
   dependency_23.f90 \
   dependency_24.f90 \
   dependency_26.f90 \
   dependency_27.f90 \
   dependency_28.f90 \
   dependency_29.f90 \
   dependency_3.f90 \
   dependency_30.f90 \
   dependency_31.f90 \
   dependency_32.f90 \
   dependency_33.f90 \
   dependency_34.f90 \
   dependency_35.f90 \
   dependency_4.f90 \
   dependency_5.f90 \
   dependency_6.f90 \
   dependency_7.f90 \
   dependency_8.f90 \
   dependency_9.f90 \
   dependent_decls_1.f90 \
   der_array_1.f90 \
   der_io_3.f90 \
   der_pointer_1.f90 \
   der_pointer_2.f90 \
   der_pointer_3.f90 \
   der_pointer_4.f90 \
   der_ptr_component_1.f90 \
 derived_comp_array_ref_2.f90 \
 derived_comp_array_ref_3.f90 \
   derived_comp_array_ref_4.f90 \
 derived_comp_array_ref_5.f90 \
   derived_comp_array_ref_7.f90 \
 derived_constructor_comps_1.f90 \
   derived_constructor_comps_3.f90 \
   derived_init_2.f90 \
   derived_pointer_recursion_2.f90 \
   derived_pointer_recursion.f90 \
   derived_sub.f90 \
   dev_null_postprocessed.f90 \
   dfloat_1.f90 \
   direct_io_11.f90 \
   direct_io_12.f90 \
   direct_io_2.f90 \
   direct_io_3.f90 \
   direct_io_4.f90 \
   direct_io_5.f90 \
   direct_io_6.f90 \
   direct_io_7.f90 \
   direct_io_8.f90 \
   do_1.f90 \
   do_check_1.f90 \
   do_check_2.f90 \
   do_check_4.f90 \
   do_iterator_2.f90 \
   do_pointer_1.f90 \
   double_complex_1.f90 \
   dummy_functions_1.f90 \
   dummy_procedure_3.f90 \
   e_d_fmt.f90 \
   edit_real_1.f90 \
   elemental_dependency_2.f90 \
   elemental_dependency_3.f90 \
   elemental_optional_args_1.f90 \
 elemental_scalar_args_1.f90 \
   elemental_subroutine_1.f90 \
   elemental_subroutine_2.f90 \
   elemental_subroutine_3.f90 \
   elemental_subroutine_6.f90 \
   elemental_subroutine_7.f90 \
   empty_format_1.f90 \
   empty_function_1.f90 \
 empty_type.f90 \
   endfile_2.f90 \
   endfile_3.f90 \
   endfile_4.f90 \
   endfile_f90.f90 \
   entry_11.f90 \
   entry_12.f90 \
   entry_14.f90 \
   entry_2.f90 \
   entry_3.f90 \
   entry_8.f90 \
   entry_array_specs_3.f90 \
   eof_1.f90 \
   eof_2.f90 \
   eof_3.f90 \
   eor_1.f90 \
   eor_handling_3.f90 \
   eor_handling_4.f90 \
   eor_handling_5.f90 \
   eoshift_2.f90 \
   eoshift_bounds_1.f90 \
   eoshift_large_1.f90 \
   eoshift.f90 \
   equiv_constraint_4.f90 \
   equiv_substr.f90 \
   erf.f90 \
   erfc_scaled_1.f90 \
   error_format.f90 \
   exponent_1.f90 \
   exponent_2.f90 \
   external_procedures_2.f90 \
   f2c_1.f90 \
   f2c_2.f90 \
   f2c_3.f90 \
   f2c_6.f90 \
   f2c_7.f90 \
   f2c_8.f90 \
   f2c_9.f90 \
   fgetc_1.f90 \
   fgetc_2.f90 \
   float_1.f90 \
   fmt_colon.f90 \
   fmt_error_4.f90 \
   fmt_error_5.f90 \
   fmt_exhaust.f90 \
   fmt_f0_1.f90 \
   fmt_float.f90 \
   fmt_huge.f90 \
   fmt_int_sign.f90 \
   fmt_l.f90 \
   fmt_p_1.f90 \
   fmt_read.f90 \
   fmt_t_2.f90 \
   fmt_t_4.f90 \
   fmt_zero_precision.f90 \
   fold_nearest.f90 \
   forall_13.f90 \
   forall_3.f90 \
   forall_7.f90 \
   forall_char_dependencies_1.f90 \
   fseek.f90 \
   ftell_1.f90 \
   ftell_2.f90 \
   ftell_3.f90 \
   func_assign_2.f90 \
   func_derived_1.f90 \
   func_derived_2.f90 \
   func_result_1.f90 \
   func_result_2.f90 \
   func_result_4.f90 \
   function_charlen_1.f90 \
   function_charlen_2.f90 \
   function_kinds_1.f90 \
   function_types_2.f90 \
   gamma_1.f90 \
   gamma_4.f90 \
   gamma_5.f90 \
   generic_1.f90 \
   generic_10.f90 \
   generic_15.f90 \
   generic_17.f90 \
   generic_2.f90 \
   generic_21.f90 \
   generic_3.f90 \
generic_6.f90 \
   generic_8.f90 \
   getenv_1.f90 \
   global_references_2.f90 \
   host_assoc_call_3.f90 \
   host_assoc_call_5.f90 \
   host_assoc_call_6.f90 \
   host_assoc_function_2.f90 \
   host_assoc_function_3.f90 \
   host_assoc_function_4.f90 \
   host_assoc_function_6.f90 \
   host_assoc_types_2.f90 \
   host_dummy_index_1.f90 \
   host_used_types_1.f90 \
   hypot_1.f90 \
   iargc.f90 \
   ichar_2.f90 \
   implicit_10.f90 \
   implicit_13.f90 \
   implicit_3.f90 \
   implicit_6.f90 \
   implied_do_1.f90 \
   in_pack_rank7.f90 \
   include_1.f90 \
   include_4.f90 \
 index.f90 \
   init_flag_1.f90 \
   init_flag_2.f90 \
   init_flag_3.f90 \
   init_flag_4.f90 \
   init_flag_5.f90 \
   init_flag_6.f90 \
   init_flag_7.f90 \
   initialization_10.f90 \
   initialization_11.f90 \
   initialization_18.f90 \
   initialization_19.f90 \
   initialization_2.f90 \
   initialization_22.f90 \
   initialization_25.f90 \
   initialization_26.f90 \
   initialization_27.f90 \
   initialization_5.f90 \
   initialization_6.f90 \
   inquire-complex.f90 \
   int_2.f90 \
   int_3.f90 \
   int_conv_1.f90 \
   integer_exponentiation_1.f90 \
   integer_exponentiation_2.f90 \
   intent_out_4.f90 \
   intent_out_6.f90 \
   intent_used_1.f90 \
   interface_10.f90 \
   interface_11.f90 \
   interface_14.f90 \
   interface_17.f90 \
   interface_18.f90 \
   interface_2.f90 \
   interface_25.f90 \
   interface_29.f90 \
   interface_31.f90 \
   interface_9.f90 \
   interface_assignment_1.f90 \
   interface_assignment_5.f90 \
   interface_proc_end.f90 \
   internal_pack_1.f90 \
   internal_pack_11.f90 \
   internal_pack_2.f90 \
   internal_pack_3.f90 \
   internal_pack_4.f90 \
   internal_pack_5.f90 \
   internal_pack_8.f90 \
   internal_references_2.f90 \
   internal_write_1.f90 \
   intrinsic_1.f90 \
   intrinsic_2.f90 \
   intrinsic_4.f90 \
   intrinsic_5.f90 \
   intrinsic_char_1.f90 \
   intrinsic_ifunction_1.f90 \
   intrinsic_intkinds_1.f90 \
   intrinsic_modulo_1.f90 \
   intrinsic_pack_1.f90 \
   intrinsic_pack_2.f90 \
   intrinsic_pack_3.f90 \
   intrinsic_pack_4.f90 \
   intrinsic_pack_5.f90 \
   intrinsic_product_1.f90 \
   intrinsic_sign_1.f90 \
   intrinsic_sign_2.f90 \
   intrinsic_spread_1.f90 \
   intrinsic_spread_2.f90 \
   intrinsic_spread_3.f90 \
   intrinsic_std_2.f90 \
   intrinsic_std_3.f90 \
   intrinsic_std_4.f90 \
   intrinsic_std_6.f90 \
   intrinsic_unpack_1.f90 \
   intrinsic_unpack_2.f90 \
   intrinsic_unpack_3.f90 \
   intrinsic_verify_1.f90 \
   intrinsics_kind_argument_1.f90 \
   io_real_boz.f90 \
   io_real_boz2.f90 \
   iostat_1.f90 \
   iostat_3.f90 \
   iostat_4.f90 \
   ishft_2.f90 \
   ishft_4.f90 \
   isnan_1.f90 \
   label_4.f90 \
   large_integer_kind_1.f90 \
   large_integer_kind_2.f90 \
   large_real_kind_1.f90 \
   large_real_kind_form_io_1.f90 \
   large_real_kind_form_io_2.f90 \
   largeequiv_1.f90 \
   ldist-1.f90 \
   leadz_trailz_1.f90 \
   leadz_trailz_2.f90 \
   leadz_trailz_3.f90 \
   linked_list_1.f90 \
   list_read_1.f90 \
   list_read_10.f90 \
   list_read_2.f90 \
   list_read_3.f90 \
   list_read_6.f90 \
   list_read_7.f90 \
   list_read_8.f90 \
   list_read_9.f90 \
   logical_1.f90 \
   logical_3.f90 \
   logical_data_1.f90 \
   logical_dot_product.f90 \
   loop_nest_1.f90 \
   ltime_gmtime_1.f90 \
   ltime_gmtime_2.f90 \
   malloc_free_1.f90 \
   mapping_2.f90 \
   mapping_3.f90 \
   matmul_1.f90 \
   matmul_2.f90 \
   matmul_3.f90 \
   matmul_4.f90 \
   matmul_5.f90 \
   matmul_6.f90 \
   matmul_7.f90 \
   matmul_bounds_2.f90 \
   matmul_bounds_3.f90 \
   matmul_bounds_4.f90 \
   matmul_bounds_5.f90 \
   maxloc_1.f90 \
   maxloc_bounds_1.f90 \
   maxloc_bounds_2.f90 \
   maxloc_bounds_3.f90 \
   maxloc_bounds_4.f90 \
   maxloc_bounds_5.f90 \
   maxloc_bounds_6.f90 \
   maxloc_bounds_7.f90 \
   maxloc_bounds_8.f90 \
   maxlocval_1.f90 \
   maxlocval_2.f90 \
   maxlocval_3.f90 \
   maxlocval_4.f90 \
   mclock.f90 \
   merge_char_1.f90 \
   merge_char_3.f90 \
   merge_char_const.f90 \
   merge_init_expr.f90 \
   min_max_optional_1.f90 \
   min_max_optional_5.f90 \
   minlocval_1.f90 \
   minlocval_2.f90 \
   minlocval_3.f90 \
   minlocval_4.f90 \
   minmaxloc_1.f90 \
   minmaxloc_2.f90 \
   minmaxloc_3.f90 \
   minmaxloc_4.f90 \
   minmaxloc_5.f90 \
   minmaxloc_6.f90 \
   minmaxloc_integer_kinds_1.f90 \
   minmaxval_1.f90 \
   missing_optional_dummy_1.f90 \
   missing_optional_dummy_2.f90 \
   missing_optional_dummy_3.f90 \
   missing_optional_dummy_4.f90 \
   missing_optional_dummy_5.f90 \
   missing_optional_dummy_6.f90 \
   missing_parens_2.f90 \
   module_blank_common.f90 \
   module_commons_1.f90 \
   module_commons_2.f90 \
   module_commons_3.f90 \
   module_double_reuse.f90 \
   module_equivalence_1.f90 \
   module_equivalence_2.f90 \
   module_equivalence_3.f90 \
   module_equivalence_4.f90 \
   module_equivalence_5.f90 \
   module_equivalence_6.f90 \
   module_function_type_1.f90 \
   module_implicit_conversion.f90 \
   module_interface_1.f90 \
   module_interface_2.f90 \
   module_md5_1.f90 \
   module_naming_1.f90 \
   module_parameter_array_refs_1.f90 \
   module_private_array_refs_1.f90 \
   module_proc_external_dummy.f90 \
   module_read_1.f90 \
   module_widestring_1.f90 \
   modulo_1.f90 \
   move_alloc.f90 \
   multiple_allocation_1.f90 \
   multiple_allocation_2.f90 \
   mvbits_1.f90 \
   mvbits_2.f90 \
   mvbits_3.f90 \
   mvbits_4.f90 \
   mvbits_5.f90 \
   mvbits_6.f90 \
   mvbits_7.f90 \
   mvbits_8.f90 \
   named_interface.f90 \
   namelist_13.f90 \
   namelist_15.f90 \
   namelist_16.f90 \
   namelist_17.f90 \
   namelist_18.f90 \
   namelist_19.f90 \
   namelist_20.f90 \
   namelist_23.f90 \
   namelist_24.f90 \
   namelist_25.f90 \
   namelist_29.f90 \
   namelist_30.f90 \
   namelist_31.f90 \
   namelist_36.f90 \
   namelist_37.f90 \
   namelist_39.f90 \
   namelist_40.f90 \
   namelist_41.f90 \
   namelist_42.f90 \
   namelist_43.f90 \
   namelist_45.f90 \
   namelist_46.f90 \
   namelist_47.f90 \
   namelist_48.f90 \
   namelist_49.f90 \
   namelist_54.f90 \
   namelist_55.f90 \
   namelist_58.f90 \
   namelist_59.f90 \
   namelist_60.f90 \
   namelist_61.f90 \
   namelist_62.f90 \
   namelist_internal.f90 \
   nan_1.f90 \
   nan_3.f90 \
   nan_6.f90 \
   nearest_1.f90 \
   nearest_3.f90 \
   nearest_4.f90 \
   negative_automatic_size.f90 \
   negative-z-descriptor.f90 \
   nested_array_constructor_1.f90 \
   nested_array_constructor_2.f90 \
   nested_array_constructor_3.f90 \
   nested_array_constructor_4.f90 \
   nested_array_constructor_5.f90 \
   nested_array_constructor_6.f90 \
   nested_modules_1.f90 \
   nested_modules_2.f90 \
   nested_modules_3.f90 \
   nested_modules_4.f90 \
   nested_modules_5.f90 \
   nested_modules_6.f90 \
   nested_reshape.f90 \
   nesting_1.f90 \
   nesting_2.f90 \
   nesting_3.f90 \
   new_line.f90 \
   nint_1.f90 \
   nint_2.f90 \
   no_unit_error_1.f90 \
   noadv_size.f90 \
   nonreturning_statements.f90 \
   nosigned_zero_1.f90 \
   nosigned_zero_2.f90 \
   nullify_3.f90 \
   open_access_append_1.f90 \
   open_access_append_2.f90 \
   open_new.f90 \
   open_readonly_1.f90 \
   open_status_1.f90 \
   open_status_2.f90 \
   open_status_3.f90 \
   operator_1.f90 \
   optional_assumed_charlen_1.f90 \
   optional_dim_2.f90 \
   optional_dim_3.f90 \
   output_exponents_1.f90 \
   overload_1.f90 \
   overload_2.f90 \
   pack_bounds_1.f90 \
   pack_mask_1.f90 \
   pad_no.f90 \
   parameter_array_dummy.f90 \
   parameter_array_element_1.f90 \
   parameter_array_init_1.f90 \
   parameter_array_init_2.f90 \
   parameter_array_init_3.f90 \
parameter_array_init_5.f90 \
   parameter_array_ref_1.f90 \
   parameter_array_section_1.f90 \
   parameter_array_section_2.f90 \
   parameter_unused.f90 \
   parens_3.f90 \
   parens_4.f90 \
   parens_5.f90 \
   parens_6.f90 \
   parens_7.f90 \
   parent_result_ref_1.f90 \
   parent_result_ref_2.f90 \
   parent_result_ref_3.f90 \
   parent_result_ref_4.f90 \
   past_eor.f90 \
   pointer_1.f90 \
   pointer_assign_3.f90 \
   pointer_assign_4.f90 \
   pointer_check_1.f90 \
   pointer_check_2.f90 \
   pointer_check_3.f90 \
   pointer_check_4.f90 \
   pointer_check_6.f90 \
   pointer_function_actual_2.f90 \
   pointer_intent_1.f90 \
   pointer_to_substring.f90 \
   power.f90 \
   pr15129.f90 \
   pr15140.f90 \
   pr15324.f90 \
   pr15957.f90 \
   pr15959.f90 \
   pr16597.f90 \
   pr16861.f90 \
   pr16935.f90 \
   pr17090.f90 \
   pr17143.f90 \
   pr17164.f90 \
   pr17285.f90 \
   pr17286.f90 \
   pr17612.f90 \
   pr17615.f90 \
   pr17706.f90 \
   pr18025.f90 \
   pr18122.f90 \
   pr18210.f90 \
   pr18392.f90 \
   pr19467.f90 \
PR19754_2.f90 \
   pr19926.f90 \
   pr19928-2.f90 \
   pr20086.f90 \
   pr20124.f90 \
   pr20257.f90 \
   pr20480.f90 \
   pr21177.f90 \
   pr25923.f90 \
   pr26246_1.f90 \
   pr26246_2.f90 \
   pr28158.f90 \
   pr28971.f90 \
   pr29581.f90 \
   pr29713.f90 \
   pr30391-1.f90 \
   pr32136.f90 \
   pr32222.f90 \
   pr32238.f90 \
   pr32242.f90 \
   pr32533.f90 \
   pr32535.f90 \
   pr32738.f90 \
   pr33074.f90 \
   pr33449.f90 \
   pr33646.f90 \
   pr33794.f90 \
   pr34163.f90 \
   pr35662.f90 \
   pr35944-1.f90 \
   pr35944-2.f90 \
   pr36006-1.f90 \
   pr36006-2.f90 \
   pr36286.f90 \
   pr37286.f90 \
   pr38722.f90 \
   pr39666-1.f90 \
   pr39666-2.f90 \
   PR40660.f90 \
   pr41043.f90 \
   pr41126.f90 \
   pr41212.f90 \
   pr41225.f90 \
 pr41229.f90 \
   pr41347.f90 \
   pr42108.f90 \
   pr42166.f90 \
   pr43229.f90 \
   pr43475.f90 \
   pr43505.f90 \
   pr43688.f90 \
   pr43793.f90 \
   pr43796.f90 \
   pr43866.f90 \
   pr43984.f90 \
   print_fmt_1.f90 \
   private_type_11.f90 \
   private_type_13.f90 \
   private_type_3.f90 \
   private_type_5.f90 \
   private_type_8.f90 \
   proc_decl_12.f90 \
   proc_decl_13.f90 \
   proc_decl_14.f90 \
   proc_decl_15.f90 \
   proc_decl_16.f90 \
   proc_decl_18.f90 \
   proc_decl_19.f90 \
   proc_decl_20.f90 \
   proc_decl_5.f90 \
   proc_decl_9.f90 \
   proc_ptr_10.f90 \
   proc_ptr_13.f90 \
   proc_ptr_16.f90 \
   proc_ptr_18.f90 \
   proc_ptr_19.f90 \
   proc_ptr_20.f90 \
   proc_ptr_25.f90 \
   proc_ptr_3.f90 \
   proc_ptr_5.f90 \
   proc_ptr_9.f90 \
   promotion.f90 \
   protected_1.f90 \
   protected_2.f90 \
   pure_byref_1.f90 \
   pure_byref_2.f90 \
   pure_byref_3.f90 \
   pure_formal_proc_1.f90 \
   pure_formal_proc_2.f90 \
   pure_initializer_1.f90 \
   random_3.f90 \
   random_4.f90 \
   random_5.f90 \
   random_7.f90 \
   read_2.f90 \
   read_bad_advance.f90 \
   read_eof_4.f90 \
   read_eof_5.f90 \
   read_eof_7.f90 \
   read_eof_8.f90 \
   read_eor.f90 \
   read_float_1.f90 \
   read_float_3.f90 \
   read_infnan_1.f90 \
   read_logical.f90 \
   read_noadvance.f90 \
   read_size_noadvance.f90 \
   read_x_eof.f90 \
   read_x_eor.f90 \
   readwrite_unf_direct_eor_1.f90 \
   real_const_2.f90 \
   reassoc_1.f90 \
   reassoc_2.f90 \
   reassoc_3.f90 \
   reassoc_5.f90 \
   record_marker_1.f90 \
   record_marker_3.f90 \
   recursive_check_10.f90 \
   recursive_check_11.f90 \
   recursive_check_12.f90 \
   recursive_check_13.f90 \
   recursive_check_14.f90 \
   recursive_check_7.f90 \
   recursive_check_8.f90 \
   recursive_check_9.f90 \
   recursive_reference_2.f90 \
   recursive_stack.f90 \
   reduction.f90 \
   repeat_1.f90 \
   repeat_3.f90 \
   repeat_5.f90 \
   reshape_3.f90 \
   reshape_4.f90 \
   reshape_order_1.f90 \
   reshape_order_2.f90 \
   reshape_order_3.f90 \
   reshape_order_4.f90 \
   reshape_pad_1.f90 \
   reshape_rank7.f90 \
   reshape_transpose_1.f90 \
   reshape_zerosize_1.f90 \
   reshape-alloc.f90 \
   reshape-complex.f90 \
reshape.f90 \
   result_default_init_1.f90 \
   result_in_spec_2.f90 \
   result_in_spec_3.f90 \
   ret_array_1.f90 \
   ret_pointer_1.f90 \
ret_pointer_2.f90 \
   rrspacing_1.f90 \
   runtime_warning_1.f90 \
   same_name_1.f90 \
   save_1.f90 \
   save_2.f90 \
   save_3.f90 \
   save_parameter.f90 \
   scalar_mask_1.f90 \
   scalar_mask_2.f90 \
   scalarize_parameter_array_1.f90 \
   scale_1.f90 \
   scan_1.f90 \
   select_1.f90 \
   select_2.f90 \
   select_3.f90 \
   select_5.f90 \
   select_char_1.f90 \
   select_char_3.f90 \
   selected_kind_1.f90 \
   sequence_types_1.f90 \
   shape_2.f90 \
   shape_3.f90 \
   shape_4.f90 \
shift-alloc.f90 \
   shift-kind_2.f90 \
   shift-kind.f90 \
   sibling_dummy_procedure_1.f90 \
   sibling_dummy_procedure_2.f90 \
   sibling_dummy_procedure_3.f90 \
   simplify_modulo.f90 \
   single_char_string.f90 \
   size_dim.f90 \
   size_kind.f90 \
   size_optional_dim_1.f90 \
   slash_1.f90 \
   sms-1.f90 \
   spec_expr_2.f90 \
   spec_expr_3.f90 \
 spec_expr_4.f90 \
   spec_expr_5.f90 \
   specification_type_resolution_1.f90 \
   specification_type_resolution_2.f90 \
   spread_bounds_1.f90 \
   spread_scalar_source.f90 \
   spread_shape_1.f90 \
   spread_size_limit.f90 \
   spread_zerosize_1.f90 \
   stat_1.f90 \
   stat_2.f90 \
   stfunc_1.f90 \
   stfunc_4.f90 \
   streamio_1.f90 \
   streamio_11.f90 \
   streamio_12.f90 \
   streamio_13.f90 \
   streamio_2.f90 \
   streamio_4.f90 \
   streamio_5.f90 \
   streamio_6.f90 \
   streamio_7.f90 \
streamio_9.f90 \
   string_0xfe_0xff_1.f90 \
   string_ctor_1.f90 \
   string_pad_trunc.f90 \
 structure_constructor_10.f90 \
   subref_array_pointer_3.f90 \
   substr_5.f90 \
   substring_equivalence.f90 \
   sum_zero_array_1.f90 \
   temporary_1.f90 \
   test_com_block.f90 \
   tiny_1.f90 \
   tiny_2.f90 \
   tl_editing.f90 \
   transfer_array_intrinsic_1.f90 \
   transfer_array_intrinsic_3.f90 \
   transfer_array_intrinsic_4.f90 \
   transfer_check_1.f90 \
   transfer_intrinsic_1.f90 \
   transfer_simplify_4.f90 \
   transfer_simplify_5.f90 \
   transfer_simplify_6.f90 \
   transfer_simplify_8.f90 \
   transfer_simplify_9.f90 \
   transpose_1.f90 \
   transpose_2.f90 \
   transpose_conjg_1.f90 \
   transpose_reshape_r10.f90 \
   trim_optimize_1.f90 \
   trim_optimize_2.f90 \
   unf_read_corrupted_1.f90 \
   unf_read_corrupted_2.f90 \
   unf_short_record_1.f90 \
   unformatted_recl_1.f90 \
   unit_1.f90 \
   unpack_bounds_1.f90 \
   unpack_bounds_2.f90 \
   unpack_bounds_3.f90 \
   unpack_mask_1.f90 \
   unpack_zerosize_1.f90 \
   unreferenced_use_assoc_1.f90 \
   unused_artificial_dummies_1.f90 \
   use_11.f90 \
   use_12.f90 \
   use_13.f90 \
   use_allocated_1.f90 \
   use_only_1.f90 \
   use_only_2.f90 \
   use_rename_1.f90 \
   use_rename_2.f90 \
   use_rename_3.f90 \
   used_before_typed_5.f90 \
 used_dummy_types_1.f90 \
   used_dummy_types_6.f90 \
   used_dummy_types_7.f90 \
   used_dummy_types_8.f90 \
   used_interface_ref.f90 \
   used_types_1.f90 \
   used_types_10.f90 \
   used_types_11.f90 \
   used_types_12.f90 \
   used_types_13.f90 \
   used_types_15.f90 \
   used_types_16.f90 \
   used_types_18.f90 \
   used_types_19.f90 \
   used_types_2.f90 \
   used_types_20.f90 \
   used_types_21.f90 \
 used_types_5.f90 \
   used_types_6.f90 \
   used_types_9.f90 \
   userdef_operator_1.f90 \
 value_1.f90 \
   value_test.f90 \
   vector_subscript_1.f90 \
vector_subscript_2.f90 \
   vector_subscript_3.f90 \
   vector_subscript_4.f90 \
   vector_subscript_5.f90 \
   vector_subscript_6.f90 \
   volatile.f90 \
   volatile10.f90 \
   volatile11.f90 \
   volatile4.f90 \
   volatile5.f90 \
   volatile6.f90 \
   volatile7.f90 \
   volatile9.f90 \
   Wall.f90 \
   warn_conversion_2.f90 \
   warn_function_without_result.f90 \
   warn_implicit_procedure_1.f90 \
   warn_intent_out_not_set.f90 \
   warn_std_1.f90 \
   warn_std_2.f90 \
   warn_std_3.f90 \
   warn_unused_dummy_argument_1.f90 \
   warn_unused_dummy_argument_2.f90 \
   warn_unused_var.f90 \
   where_2.f90 \
   where_nested_1.f90 \
   where_operator_assign_1.f90 \
   where_operator_assign_2.f90 \
   where_operator_assign_3.f90 \
 whole_file_11.f90 \
   whole_file_12.f90 \
   whole_file_13.f90 \
   whole_file_15.f90 \
   whole_file_19.f90 \
   whole_file_21.f90 \
   whole_file_22.f90 \
   whole_file_26.f90 \
   whole_file_5.f90 \
   whole_file_6.f90 \
   whole_file_9.f90 \
   Wno-all.f90 \
   write_0_pe_format.f90 \
   write_check3.f90 \
   write_direct_eor.f90 \
   write_fmt_trim.f90 \
   write_padding.f90 \
   write_recursive.f90 \
   wtruncate_f90.f90 \
   zero_array_components_1.f90 \
   zero_length_1.f90 \
   zero_sized_1.f90 \
   zero_sized_2.f90 \
   zero_sized_3.f90 \
   zero_sized_4.f90 \
   zero_sized_5.f90 


# Oct 1 2010 passing tests that are now failing.
# However, these PASS in ROSE when using both -rose:skip_syntax_check AND -rose:skipfinalCompileStep.
# It is not clear what options should be used to run these and in
# many cases they will run fine with the syntax checking is turned off.
OCT_1_2010_PREVIOUSLY_PASSING_F90_TESTCODES_REQUIRED_TO_PASS = 

# Currently failing tests (12/29/2010):
# implicit_2.f90 
# implicit_derived_type_1.f90

# Fails in ROSE (using both -rose:skip_syntax_check AND -rose:skipfinalCompileStep):
# enum_1.f90
# iso_fortran_env_1.f90
# iso_fortran_env_2.f90
# reshape_2.f90
# transfer_array_intrinsic_2.f90
OCT_1_2010_F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS = \
   allocate_zerosize_3.f \
   array_constructor_type_9.f \
   backslash_3.f \
   bounds_check_13.f \
   bounds_check_2.f \
   char_comparison_1.f \
   comma_format_extension_4.f \
   comma.f \
   common_equivalence_1.f \
   constant_substring.f \
   continuation_5.f \
   continuation_6.f \
   csqrt_2.f \
   debug_2.f \
   direct_io_10.f \
   direct_io_9.f \
   dollar_edit_descriptor_1.f \
   dollar_edit_descriptor_2.f \
   dos_eol.f \
   endfile_f77.f \
 entry_array_specs_2.f \
   extended_char_comparison_1.f \
   fmt_bz_bn_err.f \
   fmt_bz_bn.f \
   fmt_error_9.f \
   fmt_f_an_p.f \
   fmt_missing_period_3.f \
   fmt_t_6.f \
   fmt_t_7.f \
   fmt_tl.f \
   fmt_with_extra.f \
 function_charlen_3.f \
   g77_intrinsics_funcs.f \
   g77_intrinsics_sub.f \
   imag_1.f \
   itime_idate_1.f \
   itime_idate_2.f \
 namelist_12.f \
   nested_forall_1.f \
   nullify_1.f \
   open-options-blanks.f \
   overwrite_1.f \
 pr12884.f \
 pr16433.f \
   pr17229.f \
   pr17472.f \
   pr19155.f \
 pr19657.f \
PR19872.f \
   pr20755.f \
   pr21730.f \
   pr22491.f \
 pr24823.f \
   pr26524.f \
   pr30667.f \
   pr36206.f \
   pr36922.f \
   pr36967.f \
   pr40587.f \
   pr41011.f \
   pr41162.f \
   pr42246-2.f \
   pr42294.f \
   pr44691.f \
   predcom-1.f \
   read_comma.f \
   read_empty_file.f \
   read_eof_6.f \
   read_many_1.f \
   real_const_1.f \
   reassoc_4.f \
   reassoc_6.f \
   secnds-1.f \
   secnds.f \
   string_null_compare_1.f \
   substr_2.f \
   substr_3.f \
   t_editing.f \
   write_back.f \
   write_rewind_1.f \
   write_rewind_2.f \
   wtruncate_f77.f \
 x_slash_1.f \
   x_slash_2.f 


# Oct 1 2010 passing tests that are now failing.
# literal_character_constant_1_x.f
# literal_character_constant_1_y.f
# literal_character_constant_1_z.f
F03_TESTCODES_REQUIRED_TO_PASS =  \
	$(OCT_1_2010_F03_TESTCODES_REQUIRED_TO_PASS) $(am__append_1)
OCT_1_2010_F03_TESTCODES_REQUIRED_TO_PASS = \
   abstract_type_7.f03 \
   array_constructor_25.f03 \
   array_constructor_29.f03 \
   array_constructor_type_1.f03 \
   array_constructor_type_12.f03 \
   array_constructor_type_4.f03 \
   array_constructor_type_8.f03 \
   binding_label_tests_12.f03 \
   binding_label_tests_14.f03 \
   char4_iunit_1.f03 \
   class_4a.f03 \
   class_4d.f03 \
   extends_8.f03 \
   f2003_io_1.f03 \
   f2003_io_2.f03 \
   f2003_io_4.f03 \
   f2003_io_6.f03 \
   f2003_io_7.f03 \
   intrinsic_shadow_1.f03 \
   intrinsic_shadow_2.f03 \
   intrinsic_shadow_3.f03 \
   pr45308.f03 \
   read_float_2.f03 \
   structure_constructor_1.f03 \
   structure_constructor_2.f03 \
   structure_constructor_5.f03 \
   value_7.f03 


# DQ (12/5/2010): Failing test as a result of newer bug fixes.
# CER (6/7/2011): This file has been moved to FAILING list so this comment can be removed
# array_constructor_type_19.f03

# This list is supposed to be empty.
SEPT_1_2010_F03_TESTCODES_REQUIRED_TO_PASS = 

# DQ (4/3/2010): Added test code used in Fortran OpenMP tests.
OPENMP_TESTS_F77_TESTCODES_REQUIRED_TO_PASS = 

# #######################
#      FAILING TESTS
# #######################

# These tests were supposed to pass in Sept 1 2010, not sure why they fail now.

# Add the tests that were previously passing (high priority to fix).
F90_TESTCODES_CURRENTLY_FAILING =  \
	$(OCT_1_2010_F90_TESTCODES_CURRENTLY_FAILING) \
	$(SEPT_1_2010_PREVIOUSLY_PASSING_F90_TESTCODES_REQUIRED_TO_PASS)
OCT_1_2010_F90_TESTCODES_CURRENTLY_FAILING = 

# The ROSE options used didn't include using both -rose:skip_syntax_check AND -rose:skipfinalCompileStep.
# If there were used likely most of these would pass.
SEPT_1_2010_F90_TESTCODES_CURRENTLY_FAILING = 
F77_FIXED_FORMAT_TESTCODES_CURRENTLY_FAILING = 
F03_TESTCODES_CURRENTLY_FAILING = \
   array_constructor_type_7.f03 \
   array_constructor_type_10.f03 \
   array_constructor_type_19.f03 \
   array_constructor_type_21.f03


# DQ (10/27/2010): Having this list allows us to pass the test in: ./scripts/policies/UnusedSources.pl
# I'm not sure that we need this files in our Fortran test suit however, they are from gfortran's test
# suite so we will leave them in place for now.
UNTESTED_TESTS = \
   bind_c_coms_driver.c \
   bind_c_dts_2_driver.c \
   bind_c_dts_driver.c \
   bind_c_usage_10_c.c \
   bind_c_usage_16_c.c \
   bind_c_usage_17_c.c \
   bind_c_vars_driver.c \
   c_by_val.c \
   c_char_driver.c \
   c_f_pointer_complex_driver.c \
   c_f_pointer_logical_driver.c \
   c_f_pointer_shape_tests_2_driver.c \
   c_f_pointer_shape_tests_4_driver.c \
   c_f_tests_driver.c \
   c_funloc_tests_3_funcs.c \
   c_funloc_tests_4_driver.c \
   c_kinds.c \
   c_loc_driver.c \
   c_loc_tests_2_funcs.c \
   c_ptr_tests_7_driver.c \
   c_ptr_tests_8_funcs.c \
   c_ptr_tests_driver.c \
   c_size_t_driver.c \
   enum_10.c \
   f2c_4.c \
   f2c_5.c \
   g77/cpp5.h \
   g77/cpp5inc.h \
   global_vars_c_init_driver.c \
   global_vars_f90_init_driver.c \
   iso_c_binding_rename_1_driver.c \
   iso_c_binding_rename_2_driver.c \
   lrshift_1.c \
   lto/20091028-1_1.c \
   lto/20091028-2_1.c \
   lto/20100222-1_1.c \
   lto/pr40725_1.c \
   mixed_io_1.c \
   only_clause_main.c \
   pr32627_driver.c \
   proc_ptr_7.c \
   proc_ptr_8.c \
   static_linking_1.c \
   test_c_assoc.c \
   value_4.c

noinst_headers = 

# Automake's testing mechanism (which defines the "make check" rule) requires passing tests.
F90_TESTCODES = \
$(F90_TESTCODES_REQUIRED_TO_PASS)

F77_TESTCODES = \
$(F77_TESTCODES_REQUIRED_TO_PASS)

F77_FIXED_FORMAT_TESTCODES = \
$(F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS)

F03_TESTCODES = \
$(F03_TESTCODES_REQUIRED_TO_PASS)


# QMTest allows both passing and failing tests.
ALL_F90_TESTCODES = \
$(F90_TESTCODES_REQUIRED_TO_PASS) \
$(F90_TESTCODES_CURRENTLY_FAILING)

ALL_F77_TESTCODES = \
$(F77_TESTCODES_REQUIRED_TO_PASS) \
$(F77_TESTCODES_CURRENTLY_FAILING)

ALL_F77_FIXED_FORMAT_TESTCODES = \
$(F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS) \
$(F77_FIXED_FORMAT_TESTCODES_CURRENTLY_FAILING)

ALL_F03_TESTCODES = \
$(F03_TESTCODES_REQUIRED_TO_PASS) \
$(F03_TESTCODES_CURRENTLY_FAILING)


# File option to accumulate performance information about the compilation
PERFORMANCE_REPORT_OPTION = -rose:compilationPerformanceFile $(top_builddir)/FORTRAN_ROSE_PERFORMANCE_DATA.csv

# ROSE_FLAGS = -rose:C_only -rose:verbose 2 --edg:restrict
# ROSE_FLAGS = -rose:C_only -rose:verbose 2 --edg:restrict $(PERFORMANCE_REPORT_OPTION)
# ROSE_FLAGS = -rose:verbose 0 -rose:output_parser_actions
# ROSE_FLAGS = -rose:verbose 2

# These options appear to improve the robustness of the tests... still looking at why...
# ROSE_FLAGS = -rose:verbose 0 -rose:skip_syntax_check
# ROSE_FLAGS = -rose:verbose 0 -rose:skip_syntax_check -rose:skipfinalCompileStep

# DQ (9/26/2011): Added optional test for dangling pointers to IR nodes in the AST (level 1 causes only an error message if dangling pointers is found).
ROSE_FLAGS = -rose:verbose 0 -rose:skip_syntax_check -rose:skipfinalCompileStep -rose:detect_dangling_pointers 1

# VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=30 --leak-check=no --error-limit=no --show-reachable=yes
# VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=30 --leak-check=no --error-limit=no --show-reachable=yes --trace-children=yes
VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=30 --leak-check=no --error-limit=no --show-reachable=yes --trace-children=yes --suppressions=$(top_srcdir)/scripts/rose-suppressions-for-valgrind
# VALGRIND = /usr/apps/valgrind/new/bin/valgrind $(VALGRIND_OPTIONS)
# VALGRIND = valgrind $(VALGRIND_OPTIONS)
VALGRIND = 
PASSING_TEST_F90_Objects = ${F90_TESTCODES:.f90=.o}
PASSING_TEST_F77_Objects = ${F77_TESTCODES:.f77=.o}

# DQ (3/11/2010): F77 tests were not being run, this fixes this.
# PASSING_TEST_F77_FIXED_FORMAT_Objects = ${F77_TESTCODES:.f=.o}
PASSING_TEST_F77_FIXED_FORMAT_Objects = ${F77_FIXED_FORMAT_TESTCODES_REQUIRED_TO_PASS:.f=.o}
PASSING_TEST_F03_Objects = ${F03_TESTCODES:.f03=.o}
TEST_F90_Objects = ${ALL_F90_TESTCODES:.f90=.o}
TEST_F77_Objects = ${ALL_F77_TESTCODES:.f77=.o}
TEST_F77_FIXED_FORMAT_Objects = ${ALL_F77_FIXED_FORMAT_TESTCODES:.f=.o}
TEST_F03_Objects = ${ALL_F03_TESTCODES:.f03=.o}
PASSING_TEST_Objects = $(PASSING_TEST_F90_Objects) $(PASSING_TEST_F77_Objects) $(PASSING_TEST_F77_FIXED_FORMAT_Objects) $(PASSING_TEST_F03_Objects) 
TEST_TRANSLATOR = $(top_builddir)/tests/testTranslator

# Make sure that all the test codes end up in the distribution
# EXTRA_DIST = $(ALL_TESTCODES)
EXTRA_DIST = $(ALL_F77_FIXED_FORMAT_TESTCODES) $(ALL_F77_TESTCODES) $(ALL_F90_TESTCODES) $(ALL_F03_TESTCODES) \
             bom_include.inc  default_format_1.inc  default_format_2.inc  include_1.inc  include_4.inc \
             literal_character_constant_1.inc  use_only_3.inc

all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  --ignore-deps tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../../../../config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-libtool \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	check-local clean clean-generic clean-libtool clean-local \
	clean-recursive ctags ctags-recursive distclean \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
#export ROSE_IN_BUILD_TREE=$(top_builddir)

# Go back and build the translator we are using to test Fortran (in case make check 
# is run directly in this directory before make has been run from the root of the 
# ROSE directory structure).  This does not appear to work!
$(TEST_TRANSLATOR):
	cd $(dir $@); $(MAKE) testTranslator

$(TEST_F90_Objects): $(TEST_TRANSLATOR) ${ALL_TESTCODES}
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS) -rose:f90 -c $(srcdir)/$(@:.o=.f90) && touch $@
#	$(VALGRIND) $(top_builddir)/tests/testCodeGeneration $(ROSE_FLAGS) -rose:f90 -c $(srcdir)/$(@:.o=.f90)
#	$(VALGRIND) $(top_builddir)/tests/testParser $(ROSE_FLAGS) -rose:f90 -c $(srcdir)/$(@:.o=.f90)
#	ls -l $@

$(TEST_F77_Objects): $(TEST_TRANSLATOR) ${ALL_TESTCODES}
#	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS) -rose:f77 -c $(srcdir)/$(@:.o=.f77)
#	$(VALGRIND) $(top_builddir)/tests/testParser $(ROSE_FLAGS) -rose:f77 -c $(srcdir)/$(@:.o=.f77)
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS) -rose:f77 -c $(srcdir)/$(@:.o=.f77) && touch $@ 
#	ls -l $@

$(TEST_F77_FIXED_FORMAT_Objects): $(TEST_TRANSLATOR) ${ALL_TESTCODES}
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS) -rose:f77 -c $(srcdir)/$(@:.o=.f) && touch $@
#	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS) -rose:f77 -c $(srcdir)/$(@:.o=.f)
#	$(VALGRIND) $(top_builddir)/tests/testParser $(ROSE_FLAGS) -rose:f77 -c $(srcdir)/$(@:.o=.f)
#	ls -l $@

# Note: If using gfortran version greater then 4.1, we can't call it with Fortran 2003 code since it is so buggy.
#       So we use -rose:skip_syntax_check to avoid the frontend syntax checking and -rose:skipfinalCompileStep
#       to avoid processing the generated code (which would have the same problem).  It is easier to just use
#       the version 4.1 gfortran which has better Fortran 2003 syntax checking support. This problem is confirmed 
#       on versions of gfortran 4.2 and 4.3.
$(TEST_F03_Objects): $(TEST_TRANSLATOR)
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS) -rose:skip_syntax_check -rose:skipfinalCompileStep -rose:f2003 -c $(srcdir)/$(@:.o=.f03)
#	Since gfortran does not support F03, and thus we skip the compileation using the backend gfortran compiler, we have to force the generation of an object file. 
#	Build a object file since gfortran fails to do so (avoids remaking the makefile target)
	@echo "   ...force generation of $@, because gfortran compiler does not handle fortran 2003 standard (and the makefile needs $@ to avoid recompilation)."
	@touch $@

tests:
	@$(MAKE) $(PASSING_TEST_Objects)
	@echo "*********************************************************************************************************************************"
	@echo "****** ROSE/tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg: make tests rule complete (terminated normally) ******"
	@echo "*********************************************************************************************************************************"

check-local:
	@echo "Tests for Fortran (from the gfortran tests suite)."
	@echo "Run the gfortran testsuite tests...."
#  Run this test explicitly since it has to be run using a specific rule and can't be lumped with the rest
#	These Fortran programs must be called externally to the test codes in the "TESTCODES" make variable
	@$(MAKE) $(PASSING_TEST_Objects)
#	DQ (4/6/2010): This fails on Hudson, but I don't know why.
#	@$(MAKE) testParser
#	@echo "Skipping Fortran code tests when using the gfortran version 4.0.x compiler (fails to support common command line options of later versions)."
	@echo "*********************************************************************************************************************************"
	@echo "****** ROSE/tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg: make check rule complete (terminated normally) ******"
	@echo "*********************************************************************************************************************************"

# Fortran support not available in ROSE unless specified on the configure command line.
#check-local:
#	@echo "*****************************************************************************************************************"
#	@echo "****** ROSE/tests/CompileTests/Fortran_tests/gfortranTestSuite/gfortran.dg: FORTRAN NOT CONFIGURED IN ROSE ******"
#	@echo "*****************************************************************************************************************"

# This will output the example testcodes that are failing
listProblemFiles: $(F77_TESTCODES_CURRENTLY_FAILING) $(F90_TESTCODES_CURRENTLY_FAILING) $(F03_TESTCODES_CURRENTLY_FAILING) $(F77_FIXED_FORMAT_TESTCODES_CURRENTLY_FAILING)
	egrep -n "*"  $(srcdir)/$(?)

clean-local:
	rm -f *.o *.rmod *_postprocessed.*
	rm -f *.s *.mod rose_*.f rose_*.f77 rose_*.f90 rose_*.f95 rose_*.f03 *.dot *.pdf *~ *.ps *.out *.log rose_performance_report_lockfile.lock
	rm -f rose_*.F*
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
