# Makefile.in generated by automake 1.9.6 from Makefile.am.
# tests/roseTests/astInterfaceTests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic 
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?

srcdir = ../../../../tests/roseTests/astInterfaceTests
top_srcdir = ../../../..
VPATH = ../../../../tests/roseTests/astInterfaceTests
pkgdatadir = $(datadir)/rose
pkglibdir = $(libdir)/rose
pkgincludedir = $(includedir)/rose
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs
bin_PROGRAMS = loopInterchange$(EXEEXT) loopUnrolling$(EXEEXT) \
	loopTiling$(EXEEXT)
noinst_PROGRAMS = buildFunctionDeclaration$(EXEEXT) \
	buildNondefiningFunction$(EXEEXT) findMain$(EXEEXT) \
	buildVariableDeclaration$(EXEEXT) buildAssignmentStmt$(EXEEXT) \
	buildFunctionCalls$(EXEEXT) buildPragmaDeclaration$(EXEEXT) \
	attachComment$(EXEEXT) insertHeader$(EXEEXT) \
	buildExpression$(EXEEXT) buildStructDeclaration$(EXEEXT) \
	lookupNamedType$(EXEEXT) buildFile$(EXEEXT) \
	movePreprocessingInfo$(EXEEXT) buildIfStmt$(EXEEXT) \
	buildCpreprocessorDefineDeclaration$(EXEEXT) \
	instrumentEndOfFunction$(EXEEXT) isUpcSharedType$(EXEEXT) \
	isUpcPhaseLessSharedType$(EXEEXT) buildLabelStatement$(EXEEXT) \
	buildSizeOfOp$(EXEEXT) abiStuffTest$(EXEEXT) \
	abiStuffTestUPC$(EXEEXT) buildNullStatement$(EXEEXT) \
	buildForStmt$(EXEEXT) canonicalLoop$(EXEEXT) \
	loopNormalization$(EXEEXT) collectReadWriteVariables$(EXEEXT) \
	typeTraits$(EXEEXT) livenessAnalysis$(EXEEXT) \
	buildProcedureHeaderStatement$(EXEEXT) \
	replaceMacroCalls$(EXEEXT) buildAbstractHandle$(EXEEXT) \
	getDependentDecls$(EXEEXT) buildStructDeclaration2$(EXEEXT) \
	buildTypedefDeclaration$(EXEEXT) deepDelete$(EXEEXT) \
	insertStatementBeforeFunction$(EXEEXT) \
	removeStatementCommentRelocation$(EXEEXT) \
	generateUniqueName$(EXEEXT) \
	annotateExpressionsWithUniqueNames$(EXEEXT) \
	buildExternalStatement$(EXEEXT) buildCommonBlock$(EXEEXT) \
	doLoopNormalization$(EXEEXT) buildLabelStatement2$(EXEEXT) \
	replaceWithPattern$(EXEEXT) insertBeforeUsingCommaOp$(EXEEXT) \
	insertAfterUsingCommaOp$(EXEEXT) deepCopy$(EXEEXT) \
	fixVariableReferences$(EXEEXT)

# Liao 8/17/2010
#if USE_ROSE_OPEN_FORTRAN_PARSER_SUPPORT
# if ROSE_USE_OPEN_FORTRAN_PARSER
am__append_1 = \
    rose_inputbuildProcedureHeaderStatement.f \
    rose_inputbuildExternalStatement.f \
    rose_inputbuildCommonBlock.f \
    rose_inputdoLoopNormalization.f \
    rose_inputbuildLabelStatement2.f

subdir = tests/roseTests/astInterfaceTests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 $(top_srcdir)/config/argz.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltdl.m4 $(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-backstroke.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-cuda-opencl.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-git-versioning.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_abiStuffTest_OBJECTS = abiStuffTest.$(OBJEXT)
abiStuffTest_OBJECTS = $(am_abiStuffTest_OBJECTS)
abiStuffTest_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 =  \
#	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 =  \
#	/lib/libyices.a
#am__DEPENDENCIES_4 = $(php_path)/lib/libphc.so \
#	$(php_path)/lib/libphp5.so \
#	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_5 = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la
#am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_7 = $(top_builddir)/src/librose.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
abiStuffTest_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_abiStuffTestUPC_OBJECTS = abiStuffTestUPC.$(OBJEXT)
abiStuffTestUPC_OBJECTS = $(am_abiStuffTestUPC_OBJECTS)
abiStuffTestUPC_LDADD = $(LDADD)
abiStuffTestUPC_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_annotateExpressionsWithUniqueNames_OBJECTS =  \
	annotateExpressionsWithUniqueNames.$(OBJEXT)
annotateExpressionsWithUniqueNames_OBJECTS =  \
	$(am_annotateExpressionsWithUniqueNames_OBJECTS)
annotateExpressionsWithUniqueNames_LDADD = $(LDADD)
annotateExpressionsWithUniqueNames_DEPENDENCIES =  \
	$(am__DEPENDENCIES_7)
am_attachComment_OBJECTS = attachComment.$(OBJEXT)
attachComment_OBJECTS = $(am_attachComment_OBJECTS)
attachComment_LDADD = $(LDADD)
attachComment_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildAbstractHandle_OBJECTS = buildAbstractHandle.$(OBJEXT)
buildAbstractHandle_OBJECTS = $(am_buildAbstractHandle_OBJECTS)
buildAbstractHandle_LDADD = $(LDADD)
buildAbstractHandle_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildAssignmentStmt_OBJECTS = buildAssignmentStmt.$(OBJEXT)
buildAssignmentStmt_OBJECTS = $(am_buildAssignmentStmt_OBJECTS)
buildAssignmentStmt_LDADD = $(LDADD)
buildAssignmentStmt_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildCommonBlock_OBJECTS = buildCommonBlock.$(OBJEXT)
buildCommonBlock_OBJECTS = $(am_buildCommonBlock_OBJECTS)
buildCommonBlock_LDADD = $(LDADD)
buildCommonBlock_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildCpreprocessorDefineDeclaration_OBJECTS =  \
	buildCpreprocessorDefineDeclaration.$(OBJEXT)
buildCpreprocessorDefineDeclaration_OBJECTS =  \
	$(am_buildCpreprocessorDefineDeclaration_OBJECTS)
buildCpreprocessorDefineDeclaration_LDADD = $(LDADD)
buildCpreprocessorDefineDeclaration_DEPENDENCIES =  \
	$(am__DEPENDENCIES_7)
am_buildExpression_OBJECTS = buildExpression.$(OBJEXT)
buildExpression_OBJECTS = $(am_buildExpression_OBJECTS)
buildExpression_LDADD = $(LDADD)
buildExpression_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildExternalStatement_OBJECTS = buildExternalStatement.$(OBJEXT)
buildExternalStatement_OBJECTS = $(am_buildExternalStatement_OBJECTS)
buildExternalStatement_LDADD = $(LDADD)
buildExternalStatement_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildFile_OBJECTS = buildFile.$(OBJEXT)
buildFile_OBJECTS = $(am_buildFile_OBJECTS)
buildFile_LDADD = $(LDADD)
buildFile_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildForStmt_OBJECTS = buildForStmt.$(OBJEXT)
buildForStmt_OBJECTS = $(am_buildForStmt_OBJECTS)
buildForStmt_LDADD = $(LDADD)
buildForStmt_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildFunctionCalls_OBJECTS = buildFunctionCalls.$(OBJEXT)
buildFunctionCalls_OBJECTS = $(am_buildFunctionCalls_OBJECTS)
buildFunctionCalls_LDADD = $(LDADD)
buildFunctionCalls_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildFunctionDeclaration_OBJECTS =  \
	buildFunctionDeclaration.$(OBJEXT)
buildFunctionDeclaration_OBJECTS =  \
	$(am_buildFunctionDeclaration_OBJECTS)
buildFunctionDeclaration_LDADD = $(LDADD)
buildFunctionDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildIfStmt_OBJECTS = buildIfStmt.$(OBJEXT)
buildIfStmt_OBJECTS = $(am_buildIfStmt_OBJECTS)
buildIfStmt_LDADD = $(LDADD)
buildIfStmt_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildLabelStatement_OBJECTS = buildLabelStatement.$(OBJEXT)
buildLabelStatement_OBJECTS = $(am_buildLabelStatement_OBJECTS)
buildLabelStatement_LDADD = $(LDADD)
buildLabelStatement_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildLabelStatement2_OBJECTS = buildLabelStatement2.$(OBJEXT)
buildLabelStatement2_OBJECTS = $(am_buildLabelStatement2_OBJECTS)
buildLabelStatement2_LDADD = $(LDADD)
buildLabelStatement2_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildNondefiningFunction_OBJECTS =  \
	buildNondefiningFunction.$(OBJEXT)
buildNondefiningFunction_OBJECTS =  \
	$(am_buildNondefiningFunction_OBJECTS)
buildNondefiningFunction_LDADD = $(LDADD)
buildNondefiningFunction_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildNullStatement_OBJECTS = buildNullStatement.$(OBJEXT)
buildNullStatement_OBJECTS = $(am_buildNullStatement_OBJECTS)
buildNullStatement_LDADD = $(LDADD)
buildNullStatement_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildPragmaDeclaration_OBJECTS = buildPragmaDeclaration.$(OBJEXT)
buildPragmaDeclaration_OBJECTS = $(am_buildPragmaDeclaration_OBJECTS)
buildPragmaDeclaration_LDADD = $(LDADD)
buildPragmaDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildProcedureHeaderStatement_OBJECTS =  \
	buildProcedureHeaderStatement.$(OBJEXT)
buildProcedureHeaderStatement_OBJECTS =  \
	$(am_buildProcedureHeaderStatement_OBJECTS)
buildProcedureHeaderStatement_LDADD = $(LDADD)
buildProcedureHeaderStatement_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildSizeOfOp_OBJECTS = buildSizeOfOp.$(OBJEXT)
buildSizeOfOp_OBJECTS = $(am_buildSizeOfOp_OBJECTS)
buildSizeOfOp_LDADD = $(LDADD)
buildSizeOfOp_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildStructDeclaration_OBJECTS = buildStructDeclaration.$(OBJEXT)
buildStructDeclaration_OBJECTS = $(am_buildStructDeclaration_OBJECTS)
buildStructDeclaration_LDADD = $(LDADD)
buildStructDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildStructDeclaration2_OBJECTS =  \
	buildStructDeclaration2.$(OBJEXT)
buildStructDeclaration2_OBJECTS =  \
	$(am_buildStructDeclaration2_OBJECTS)
buildStructDeclaration2_LDADD = $(LDADD)
buildStructDeclaration2_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildTypedefDeclaration_OBJECTS =  \
	buildTypedefDeclaration.$(OBJEXT)
buildTypedefDeclaration_OBJECTS =  \
	$(am_buildTypedefDeclaration_OBJECTS)
buildTypedefDeclaration_LDADD = $(LDADD)
buildTypedefDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_buildVariableDeclaration_OBJECTS =  \
	buildVariableDeclaration.$(OBJEXT)
buildVariableDeclaration_OBJECTS =  \
	$(am_buildVariableDeclaration_OBJECTS)
buildVariableDeclaration_LDADD = $(LDADD)
buildVariableDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_canonicalLoop_OBJECTS = canonicalLoop.$(OBJEXT)
canonicalLoop_OBJECTS = $(am_canonicalLoop_OBJECTS)
canonicalLoop_LDADD = $(LDADD)
canonicalLoop_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_collectReadWriteVariables_OBJECTS =  \
	collectReadWriteVariables.$(OBJEXT)
collectReadWriteVariables_OBJECTS =  \
	$(am_collectReadWriteVariables_OBJECTS)
collectReadWriteVariables_LDADD = $(LDADD)
collectReadWriteVariables_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_deepCopy_OBJECTS = deepCopy.$(OBJEXT)
deepCopy_OBJECTS = $(am_deepCopy_OBJECTS)
deepCopy_LDADD = $(LDADD)
deepCopy_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_deepDelete_OBJECTS = deepDelete.$(OBJEXT)
deepDelete_OBJECTS = $(am_deepDelete_OBJECTS)
deepDelete_LDADD = $(LDADD)
deepDelete_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_doLoopNormalization_OBJECTS = doLoopNormalization.$(OBJEXT)
doLoopNormalization_OBJECTS = $(am_doLoopNormalization_OBJECTS)
doLoopNormalization_LDADD = $(LDADD)
doLoopNormalization_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_findMain_OBJECTS = findMain.$(OBJEXT)
findMain_OBJECTS = $(am_findMain_OBJECTS)
findMain_LDADD = $(LDADD)
findMain_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_fixVariableReferences_OBJECTS = fixVariableReferences.$(OBJEXT)
fixVariableReferences_OBJECTS = $(am_fixVariableReferences_OBJECTS)
fixVariableReferences_LDADD = $(LDADD)
fixVariableReferences_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_generateUniqueName_OBJECTS = generateUniqueName.$(OBJEXT)
generateUniqueName_OBJECTS = $(am_generateUniqueName_OBJECTS)
generateUniqueName_LDADD = $(LDADD)
generateUniqueName_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_getDependentDecls_OBJECTS = getDependentDecls.$(OBJEXT)
getDependentDecls_OBJECTS = $(am_getDependentDecls_OBJECTS)
getDependentDecls_LDADD = $(LDADD)
getDependentDecls_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_insertAfterUsingCommaOp_OBJECTS =  \
	insertAfterUsingCommaOp.$(OBJEXT)
insertAfterUsingCommaOp_OBJECTS =  \
	$(am_insertAfterUsingCommaOp_OBJECTS)
insertAfterUsingCommaOp_LDADD = $(LDADD)
insertAfterUsingCommaOp_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_insertBeforeUsingCommaOp_OBJECTS =  \
	insertBeforeUsingCommaOp.$(OBJEXT)
insertBeforeUsingCommaOp_OBJECTS =  \
	$(am_insertBeforeUsingCommaOp_OBJECTS)
insertBeforeUsingCommaOp_LDADD = $(LDADD)
insertBeforeUsingCommaOp_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_insertHeader_OBJECTS = insertHeader.$(OBJEXT)
insertHeader_OBJECTS = $(am_insertHeader_OBJECTS)
insertHeader_LDADD = $(LDADD)
insertHeader_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_insertStatementBeforeFunction_OBJECTS =  \
	insertStatementBeforeFunction.$(OBJEXT)
insertStatementBeforeFunction_OBJECTS =  \
	$(am_insertStatementBeforeFunction_OBJECTS)
insertStatementBeforeFunction_LDADD = $(LDADD)
insertStatementBeforeFunction_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_instrumentEndOfFunction_OBJECTS =  \
	instrumentEndOfFunction.$(OBJEXT)
instrumentEndOfFunction_OBJECTS =  \
	$(am_instrumentEndOfFunction_OBJECTS)
instrumentEndOfFunction_LDADD = $(LDADD)
instrumentEndOfFunction_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_isUpcPhaseLessSharedType_OBJECTS =  \
	isUpcPhaseLessSharedType.$(OBJEXT)
isUpcPhaseLessSharedType_OBJECTS =  \
	$(am_isUpcPhaseLessSharedType_OBJECTS)
isUpcPhaseLessSharedType_LDADD = $(LDADD)
isUpcPhaseLessSharedType_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_isUpcSharedType_OBJECTS = isUpcSharedType.$(OBJEXT)
isUpcSharedType_OBJECTS = $(am_isUpcSharedType_OBJECTS)
isUpcSharedType_LDADD = $(LDADD)
isUpcSharedType_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_livenessAnalysis_OBJECTS = livenessAnalysis.$(OBJEXT)
livenessAnalysis_OBJECTS = $(am_livenessAnalysis_OBJECTS)
livenessAnalysis_LDADD = $(LDADD)
livenessAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_lookupNamedType_OBJECTS = lookupNamedType.$(OBJEXT)
lookupNamedType_OBJECTS = $(am_lookupNamedType_OBJECTS)
lookupNamedType_LDADD = $(LDADD)
lookupNamedType_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_loopInterchange_OBJECTS = loopInterchange.$(OBJEXT)
loopInterchange_OBJECTS = $(am_loopInterchange_OBJECTS)
loopInterchange_LDADD = $(LDADD)
loopInterchange_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_loopNormalization_OBJECTS = loopNormalization.$(OBJEXT)
loopNormalization_OBJECTS = $(am_loopNormalization_OBJECTS)
loopNormalization_LDADD = $(LDADD)
loopNormalization_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_loopTiling_OBJECTS = loopTiling.$(OBJEXT)
loopTiling_OBJECTS = $(am_loopTiling_OBJECTS)
loopTiling_LDADD = $(LDADD)
loopTiling_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_loopUnrolling_OBJECTS = loopUnrolling.$(OBJEXT)
loopUnrolling_OBJECTS = $(am_loopUnrolling_OBJECTS)
loopUnrolling_LDADD = $(LDADD)
loopUnrolling_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_movePreprocessingInfo_OBJECTS = movePreprocessingInfo.$(OBJEXT)
movePreprocessingInfo_OBJECTS = $(am_movePreprocessingInfo_OBJECTS)
movePreprocessingInfo_LDADD = $(LDADD)
movePreprocessingInfo_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_removeStatementCommentRelocation_OBJECTS =  \
	removeStatementCommentRelocation.$(OBJEXT)
removeStatementCommentRelocation_OBJECTS =  \
	$(am_removeStatementCommentRelocation_OBJECTS)
removeStatementCommentRelocation_LDADD = $(LDADD)
removeStatementCommentRelocation_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_replaceMacroCalls_OBJECTS = replaceMacroCalls.$(OBJEXT)
replaceMacroCalls_OBJECTS = $(am_replaceMacroCalls_OBJECTS)
replaceMacroCalls_LDADD = $(LDADD)
replaceMacroCalls_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_replaceWithPattern_OBJECTS = replaceWithPattern.$(OBJEXT)
replaceWithPattern_OBJECTS = $(am_replaceWithPattern_OBJECTS)
replaceWithPattern_LDADD = $(LDADD)
replaceWithPattern_DEPENDENCIES = $(am__DEPENDENCIES_7)
am_typeTraits_OBJECTS = typeTraits.$(OBJEXT)
typeTraits_OBJECTS = $(am_typeTraits_OBJECTS)
typeTraits_LDADD = $(LDADD)
typeTraits_DEPENDENCIES = $(am__DEPENDENCIES_7)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = @echo "  COMPILE $@"; $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = @echo "  COMPILE $@"; $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLINK = @echo "  LINK    $@"; $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(abiStuffTest_SOURCES) $(abiStuffTestUPC_SOURCES) \
	$(annotateExpressionsWithUniqueNames_SOURCES) \
	$(attachComment_SOURCES) $(buildAbstractHandle_SOURCES) \
	$(buildAssignmentStmt_SOURCES) $(buildCommonBlock_SOURCES) \
	$(buildCpreprocessorDefineDeclaration_SOURCES) \
	$(buildExpression_SOURCES) $(buildExternalStatement_SOURCES) \
	$(buildFile_SOURCES) $(buildForStmt_SOURCES) \
	$(buildFunctionCalls_SOURCES) \
	$(buildFunctionDeclaration_SOURCES) $(buildIfStmt_SOURCES) \
	$(buildLabelStatement_SOURCES) $(buildLabelStatement2_SOURCES) \
	$(buildNondefiningFunction_SOURCES) \
	$(buildNullStatement_SOURCES) \
	$(buildPragmaDeclaration_SOURCES) \
	$(buildProcedureHeaderStatement_SOURCES) \
	$(buildSizeOfOp_SOURCES) $(buildStructDeclaration_SOURCES) \
	$(buildStructDeclaration2_SOURCES) \
	$(buildTypedefDeclaration_SOURCES) \
	$(buildVariableDeclaration_SOURCES) $(canonicalLoop_SOURCES) \
	$(collectReadWriteVariables_SOURCES) $(deepCopy_SOURCES) \
	$(deepDelete_SOURCES) $(doLoopNormalization_SOURCES) \
	$(findMain_SOURCES) $(fixVariableReferences_SOURCES) \
	$(generateUniqueName_SOURCES) $(getDependentDecls_SOURCES) \
	$(insertAfterUsingCommaOp_SOURCES) \
	$(insertBeforeUsingCommaOp_SOURCES) $(insertHeader_SOURCES) \
	$(insertStatementBeforeFunction_SOURCES) \
	$(instrumentEndOfFunction_SOURCES) \
	$(isUpcPhaseLessSharedType_SOURCES) $(isUpcSharedType_SOURCES) \
	$(livenessAnalysis_SOURCES) $(lookupNamedType_SOURCES) \
	$(loopInterchange_SOURCES) $(loopNormalization_SOURCES) \
	$(loopTiling_SOURCES) $(loopUnrolling_SOURCES) \
	$(movePreprocessingInfo_SOURCES) \
	$(removeStatementCommentRelocation_SOURCES) \
	$(replaceMacroCalls_SOURCES) $(replaceWithPattern_SOURCES) \
	$(typeTraits_SOURCES)
DIST_SOURCES = $(abiStuffTest_SOURCES) $(abiStuffTestUPC_SOURCES) \
	$(annotateExpressionsWithUniqueNames_SOURCES) \
	$(attachComment_SOURCES) $(buildAbstractHandle_SOURCES) \
	$(buildAssignmentStmt_SOURCES) $(buildCommonBlock_SOURCES) \
	$(buildCpreprocessorDefineDeclaration_SOURCES) \
	$(buildExpression_SOURCES) $(buildExternalStatement_SOURCES) \
	$(buildFile_SOURCES) $(buildForStmt_SOURCES) \
	$(buildFunctionCalls_SOURCES) \
	$(buildFunctionDeclaration_SOURCES) $(buildIfStmt_SOURCES) \
	$(buildLabelStatement_SOURCES) $(buildLabelStatement2_SOURCES) \
	$(buildNondefiningFunction_SOURCES) \
	$(buildNullStatement_SOURCES) \
	$(buildPragmaDeclaration_SOURCES) \
	$(buildProcedureHeaderStatement_SOURCES) \
	$(buildSizeOfOp_SOURCES) $(buildStructDeclaration_SOURCES) \
	$(buildStructDeclaration2_SOURCES) \
	$(buildTypedefDeclaration_SOURCES) \
	$(buildVariableDeclaration_SOURCES) $(canonicalLoop_SOURCES) \
	$(collectReadWriteVariables_SOURCES) $(deepCopy_SOURCES) \
	$(deepDelete_SOURCES) $(doLoopNormalization_SOURCES) \
	$(findMain_SOURCES) $(fixVariableReferences_SOURCES) \
	$(generateUniqueName_SOURCES) $(getDependentDecls_SOURCES) \
	$(insertAfterUsingCommaOp_SOURCES) \
	$(insertBeforeUsingCommaOp_SOURCES) $(insertHeader_SOURCES) \
	$(insertStatementBeforeFunction_SOURCES) \
	$(instrumentEndOfFunction_SOURCES) \
	$(isUpcPhaseLessSharedType_SOURCES) $(isUpcSharedType_SOURCES) \
	$(livenessAnalysis_SOURCES) $(lookupNamedType_SOURCES) \
	$(loopInterchange_SOURCES) $(loopNormalization_SOURCES) \
	$(loopTiling_SOURCES) $(loopUnrolling_SOURCES) \
	$(movePreprocessingInfo_SOURCES) \
	$(removeStatementCommentRelocation_SOURCES) \
	$(replaceMacroCalls_SOURCES) $(replaceWithPattern_SOURCES) \
	$(typeTraits_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABS_COMPASS2_XML_SRCDIR = /home/bronevet/Downloads/rose/projects/compass2/compass2/xml
ACLOCAL = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run aclocal-1.9
ALTERNATE_BACKEND_C_CROSS_COMPILER_FALSE = 
ALTERNATE_BACKEND_C_CROSS_COMPILER_TRUE = #
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run tar
AR = ar
ARGZ_H = 
AUTOCONF = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run automake-1.9
AUX_LINKER = 
AWK = gawk
AXXPXX_SPECIFIC_TESTS_FALSE = 
AXXPXX_SPECIFIC_TESTS_TRUE = #
Axx_INCLUDES = 
Axx_LIBS = 
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = 4
BACKEND_COMPILER_VERSION_MINOR_NUMBER = 4
BACKEND_COMPILER_VERSION_NAME = GNU
BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_FALSE = 
BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_TRUE = #
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = 6
BACKEND_CXX_COMPILER = g++
BACKEND_C_COMPILER = gcc
BACKEND_FORTRAN_COMPILER = gfortran
BACKEND_JAVA_COMPILER = javac
BACKSTROKE_ROSS_INCLUDE = 
BACKSTROKE_SPEEDES_INCLUDE = 
BINARY_EDG_TARBALL_ENABLED_FALSE = 
BINARY_EDG_TARBALL_ENABLED_TRUE = #
BOOST_CPPFLAGS = -pthread -I/home/bronevet/apps/boost/include
BOOST_DATE_TIME_LIB = -lboost_date_time
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS =  -L/home/bronevet/apps/boost/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_REGEX_LIB = -lboost_regex
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_WAVE_LIB = -lboost_wave
CANDL_PATH = 
CC = gcc
CCDEPMODE = depmode=none
CCLD = gcc
CFLAGS = -g -O2 -g -Wall -Wstrict-prototypes -Wmissing-prototypes
CFLAGS32 = no
CLANG_CXXFLAGS = 
CLANG_LDFLAGS = 
CLANG_LIBDIR = 
CLASSPATH = /home/bronevet/Downloads/rose/compile/../src/3rdPartyLibraries/antlr-jars/antlr-3.3-complete.jar:/home/bronevet/Downloads/rose/compile/../src/3rdPartyLibraries/fortran-parser/OpenFortranParser-20111001.jar
CLOOG_PATH = 
CONVENIENCE_LTDL_FALSE = #
CONVENIENCE_LTDL_TRUE = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS =  -g -Wall
CXXLD = g++
CXX_DEBUG = -g
CXX_OPTIMIZE = 
CXX_SHARED_LIB_UPDATE = ${CXX} -shared -o
CXX_STATIC_LIB_UPDATE = ${AR} ruv
CXX_TEMPLATE_OBJECTS = 
CXX_TEMPLATE_REPOSITORY_PATH = $(top_builddir)/src
CXX_WARNINGS = -Wall
CYGPATH_W = echo
C_DEBUG = -g
C_OPTIMIZE = 
C_WARNINGS = -Wall -Wstrict-prototypes -Wmissing-prototypes
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT_TO_GML_TRANSLATOR_FALSE = 
DOT_TO_GML_TRANSLATOR_TRUE = #
DOXYGEN_ADDED_DIRECTORY_1 = @top_pwd@/src/frontend/SageIII
DOXYGEN_ADDED_DIRECTORY_2 = /home/bronevet/Downloads/rose/compile/../src/frontend/SageIII
DOXYGEN_ENABLED_SECTIONS = documentDevelopmentVersionUsingDoxygen
DOXYGEN_EXTRACT_ALL = YES
DOXYGEN_EXTRACT_PRIVATE = YES
DOXYGEN_EXTRACT_STATIC = YES
DOXYGEN_HIDE_FRIEND_COMPOUNDS = NO
DOXYGEN_HIDE_UNDOC_CLASSES = NO
DOXYGEN_HIDE_UNDOC_MEMBERS = NO
DOXYGEN_INTERNAL_DOCS = YES
DOXYGEN_USE_TAG_FILE = 
DSYMUTIL = 
DUMPBIN = 
DWARF_INCLUDE = 
DWARF_LINK = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_I386_FALSE = 
ENABLE_I386_TRUE = #
ENABLE_JAVAPORT_FALSE = 
ENABLE_JAVAPORT_TRUE = #
ETHER_PREFIX = 
EXE = 
EXEEXT = 
FGREP = /bin/grep -F
FLTK_include_path = 
FLTK_libs_path = 
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = GNU-4.4
GEN_BE = sage_gen_be.o
GFORTRAN_PATH = /usr/bin/gfortran
GHCBIN = 
GLUT_include_path = 
GLUT_libs_path = 
GL_CFLAGS = 
GL_LIBS = 
GMP_INCLUDE_PATH = 
GMP_INSTALL_PATH = 
GMP_LIBRARY_PATH = 
GREP = /bin/grep
GraphViz_include_path = 
GraphViz_libs_path = 
HAS_LIBRARY_CURL_FALSE = 
HAS_LIBRARY_CURL_TRUE = #
HS_CONFIG_OPTS = --prefix=/home/bronevet/apps/rose --user
INCLTDL = -I${top_srcdir}/libltdl
INCLUDE_COMPASS_MAKEFILE_INC = include compass_makefile.inc
INDENT = indent
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_LTDL_FALSE = 
INSTALL_LTDL_TRUE = #
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSURE_OPTIONS = 
ISL_INCLUDE_PATH = 
ISL_INSTALL_PATH = 
ISL_LIBRARY_PATH = 
IntelPin_path = 
JAR = /usr/java/jdk1.7.0_04/bin/jar
JAVA = /usr/java/jdk1.7.0_04/bin/java
JAVAC = /usr/java/jdk1.7.0_04/bin/javac
JAVAH = /usr/java/jdk1.7.0_04/bin/javah
JAVA_JVM_INCLUDE = -I/usr/java/jdk1.7.0_04/include -I/usr/java/jdk1.7.0_04/include/linux
JAVA_JVM_LINK = -L/usr/java/jdk1.7.0_04/jre/lib/amd64/server -ljvm
JAVA_PATH = /usr/java/jdk1.7.0_04
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBADD_DL = -ldl 
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBFFI_CFLAGS = 
LIBFFI_LIBS = 
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBS = 
LIBS_WITH_RPATH = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --quiet
LIPO = 
LLVM_CONFIG = 
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = rose_config.h
LT_DLLOADERS =  dlopen.la
LT_DLPREOPEN = -dlpreopen dlopen.la 
MAKEINFO = ${SHELL} /home/bronevet/Downloads/rose/config/missing --run makeinfo
MAPLE_INCLUDES = 
MAPLE_LIBS = 
MD5 = md5sum
MINT = $(top_builddir)/projects/mint/src/mint
MOC = NONE/moc
MPICXX = 
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_INCLUDE = 
MYSQL_LDFLAGS = 
MYSQL_VERSION = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJ = .o
OBJDUMP = objdump
OBJEXT = o
OLD_COMPILER_VERSION_FALSE = 
OLD_COMPILER_VERSION_TRUE = #
OPEN_FORTRAN_PARSER_PATH = /src/3rdPartyLibraries/fortran-parser
OPTIONAL_PROJECTS = 
OS_32BIT_FALSE = 
OS_32BIT_TRUE = #
OS_64BIT_FALSE = #
OS_64BIT_TRUE = 
OS_LINUX_FALSE = #
OS_LINUX_TRUE = 
OS_MACOSX_FALSE = 
OS_MACOSX_TRUE = #
OS_MINGW_FALSE = 
OS_MINGW_TRUE = #
OS_MSDOS_FALSE = 
OS_MSDOS_TRUE = #
OS_VENDOR_APPLE_FALSE = 
OS_VENDOR_APPLE_TRUE = #
OS_VENDOR_CENTOS_FALSE = #
OS_VENDOR_CENTOS_TRUE = 
OS_VENDOR_DEBIAN_FALSE = 
OS_VENDOR_DEBIAN_TRUE = #
OS_VENDOR_REDHAT_32BIT_FALSE = 
OS_VENDOR_REDHAT_32BIT_TRUE = #
OS_VENDOR_REDHAT_FALSE = 
OS_VENDOR_REDHAT_TRUE = #
OS_VENDOR_UBUNTU_FALSE = 
OS_VENDOR_UBUNTU_TRUE = #
OS_release = 6.2
OS_vendor = CentOS
OTOOL = 
OTOOL64 = 
PACKAGE = rose
PACKAGE_BUGREPORT = 
PACKAGE_NAME = ROSE
PACKAGE_STRING = ROSE 0.9.5a
PACKAGE_TARNAME = rose
PACKAGE_VERSION = 0.9.5a
PACKAGE_VERSION_NUMERIC = 0.9.5.1
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
POET_INCL = -I$(poet_dir)
POET_LIB = 
PPL_PATH = 
PURIFY_OPTIONS = -windows=no -recursion-depth-limit=40000 -chain-length=24 -first-only=yes -leaks-at-exit=no -inuse-at-exit=no -always-use-cache-dir=yes -cache-dir=/home/bronevet/tmp -best-effort 
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_SITE_PKG = 
Pxx_INCLUDES = 
Pxx_LIBS = 
QROSE_PREFIX = 
QROSE_USE_MINGW32_FALSE = 
QROSE_USE_MINGW32_TRUE = #
QROSE_USE_WINDOWS_FALSE = 
QROSE_USE_WINDOWS_TRUE = #
QT_INCLUDES = -DQT3_SUPPORT -INONE/QtCore -INONE/QtGui -INONE/Qt3Support -INONE/QtXml -INONE
QT_LDFLAGS = -LNONE -lQtCore -lQtGui -lQt3Support -lQtXml -lQtUiTools
QT_VERSION = 
QT_VERSION_MAJOR = 
QT_VERSION_MINOR = 
RANLIB = ranlib
RCC = NONE/rcc
ROSEHPCT_DEP_INCLUDES = 
ROSEHPCT_DEP_LIBS = 
ROSE_BOOST_NORMAL_INCLUDE_PATH = 

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use). 
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = -isystem /home/bronevet/apps/boost/include
ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE = #
ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE = 
ROSE_BUILD_COMPASS2_FALSE = 
ROSE_BUILD_COMPASS2_TRUE = #
ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_EDG_WITH_CUDA_SUPPORT_FALSE = 
ROSE_BUILD_EDG_WITH_CUDA_SUPPORT_TRUE = #
ROSE_BUILD_EDG_WITH_OPENCL_SUPPORT_FALSE = 
ROSE_BUILD_EDG_WITH_OPENCL_SUPPORT_TRUE = #
ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_OS_IS_CYGWIN_FALSE = 
ROSE_BUILD_OS_IS_CYGWIN_TRUE = #
ROSE_BUILD_OS_IS_OSX_FALSE = 
ROSE_BUILD_OS_IS_OSX_TRUE = #
ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE = #
ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE = 
ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE = #
ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE = 
ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_FALSE = 
ROSE_BUILD_PYTHON_LANGUAGE_SUPPORT_TRUE = #
ROSE_BUILD_ROSEHPCT_FALSE = 
ROSE_BUILD_ROSEHPCT_TRUE = #
ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE = #
ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE = 
ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE = #
ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE = 
ROSE_EDG_MAJOR_VERSION_NUMBER = 3
ROSE_EDG_MINOR_VERSION_NUMBER = 3
ROSE_HAS_EDG_SOURCE_FALSE = 
ROSE_HAS_EDG_SOURCE_TRUE = #
ROSE_HAVE_LIBYICES_FALSE = 
ROSE_HAVE_LIBYICES_TRUE = #
ROSE_HAVE_YICES_FALSE = 
ROSE_HAVE_YICES_TRUE = #
ROSE_HOME = .
ROSE_LSB_RELEASE = lsb_release
ROSE_MPI_FALSE = 
ROSE_MPI_TRUE = #
ROSE_OBJDUMP_PATH = objdump
ROSE_OFP_CONTAINS_JAVA_FILE_FALSE = 
ROSE_OFP_CONTAINS_JAVA_FILE_TRUE = #
ROSE_OFP_JAR_FILE = OpenFortranParser-20111001.jar
ROSE_OFP_MAJOR_VERSION_NUMBER = 0
ROSE_OFP_MINOR_VERSION_NUMBER = 8
ROSE_OFP_PATCH_VERSION_NUMBER = 3
ROSE_OFP_VERSION_NUMBER = 20111001
ROSE_PCH_FALSE = 
ROSE_PCH_TRUE = #
ROSE_PS2PDF_PATH = ps2pdf
ROSE_SUPPORT_GNU_EXTENSIONS = FALSE
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = FALSE
ROSE_USE_ASSEMBLY_SEMANTICS_FALSE = 
ROSE_USE_ASSEMBLY_SEMANTICS_TRUE = #
ROSE_USE_BDDBDDB_FALSE = 
ROSE_USE_BDDBDDB_TRUE = #
ROSE_USE_BINARYCONTEXTLOOKUP_FALSE = 
ROSE_USE_BINARYCONTEXTLOOKUP_TRUE = #
ROSE_USE_BOOST_WAVE_FALSE = #
ROSE_USE_BOOST_WAVE_TRUE = 
ROSE_USE_CANDL = 
ROSE_USE_CANDL_FALSE = 
ROSE_USE_CANDL_TRUE = #
ROSE_USE_CLANG_FRONTEND = 
ROSE_USE_CLANG_FRONTEND_FALSE = 
ROSE_USE_CLANG_FRONTEND_TRUE = #
ROSE_USE_CLOOG = 
ROSE_USE_CLOOG_FALSE = 
ROSE_USE_CLOOG_TRUE = #
ROSE_USE_CUDA_SUPPORT = 7
ROSE_USE_CUDA_SUPPORT_FALSE = 
ROSE_USE_CUDA_SUPPORT_TRUE = #
ROSE_USE_DWARF_FALSE = 
ROSE_USE_DWARF_TRUE = #
ROSE_USE_EDG_VERSION_4_3_FALSE = 
ROSE_USE_EDG_VERSION_4_3_TRUE = #
ROSE_USE_EDG_VERSION_4_FALSE = 
ROSE_USE_EDG_VERSION_4_TRUE = #
ROSE_USE_ETHER_FALSE = 
ROSE_USE_ETHER_TRUE = #
ROSE_USE_GCC_OMP_FALSE = 
ROSE_USE_GCC_OMP_TRUE = #
ROSE_USE_GRAPHVIZ_DOT_FALSE = 
ROSE_USE_GRAPHVIZ_DOT_TRUE = #
ROSE_USE_IDA_FALSE = 
ROSE_USE_IDA_TRUE = #
ROSE_USE_INDENT_FALSE = #
ROSE_USE_INDENT_TRUE = 
ROSE_USE_INSURE_FALSE = 
ROSE_USE_INSURE_TRUE = #
ROSE_USE_INTEL_PIN_FALSE = 
ROSE_USE_INTEL_PIN_TRUE = #
ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE = 
ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE = #
ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE = #
ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE = 
ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE = #
ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE = 
ROSE_USE_LIBFFI_FALSE = 
ROSE_USE_LIBFFI_TRUE = #
ROSE_USE_LIBNUMA_FALSE = 
ROSE_USE_LIBNUMA_TRUE = #
ROSE_USE_LLVM_FALSE = 
ROSE_USE_LLVM_TRUE = #
ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE = 
ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE = #
ROSE_USE_MAPLE_FALSE = 
ROSE_USE_MAPLE_TRUE = #
ROSE_USE_MYSQL_FALSE = 
ROSE_USE_MYSQL_TRUE = #
ROSE_USE_NEW_EDG_INTERFACE_FALSE = 
ROSE_USE_NEW_EDG_INTERFACE_TRUE = #
ROSE_USE_OBJDUMP_FALSE = #
ROSE_USE_OBJDUMP_TRUE = 
ROSE_USE_OMNI_OPENMP_FALSE = 
ROSE_USE_OMNI_OPENMP_TRUE = #
ROSE_USE_OPENCL_SUPPORT = 
ROSE_USE_OPENCL_SUPPORT_FALSE = 
ROSE_USE_OPENCL_SUPPORT_TRUE = #
ROSE_USE_OPENGL_FALSE = 
ROSE_USE_OPENGL_TRUE = #
ROSE_USE_PHP_FALSE = 
ROSE_USE_PHP_TRUE = #
ROSE_USE_PPL = 
ROSE_USE_PPL_FALSE = 
ROSE_USE_PPL_TRUE = #
ROSE_USE_PS2PDF_FALSE = #
ROSE_USE_PS2PDF_TRUE = 
ROSE_USE_PYTHON_FALSE = #
ROSE_USE_PYTHON_TRUE = 
ROSE_USE_QROSE_FALSE = 
ROSE_USE_QROSE_TRUE = #
ROSE_USE_QT_FALSE = 
ROSE_USE_QT_TRUE = #
ROSE_USE_RTED_FALSE = 
ROSE_USE_RTED_TRUE = #
ROSE_USE_SAT_FALSE = 
ROSE_USE_SAT_TRUE = #
ROSE_USE_SCOPLIB = 
ROSE_USE_SCOPLIB_FALSE = 
ROSE_USE_SCOPLIB_TRUE = #
ROSE_USE_SMALLER_GENERATED_FILES_FALSE = 
ROSE_USE_SMALLER_GENERATED_FILES_TRUE = #
ROSE_USE_SQLITE_DATABASE_FALSE = 
ROSE_USE_SQLITE_DATABASE_TRUE = #
ROSE_USE_SSL_SUPPORT_FALSE = 
ROSE_USE_SSL_SUPPORT_TRUE = #
ROSE_USE_TCLSH_FALSE = 
ROSE_USE_TCLSH_TRUE = #
ROSE_USE_TEST_SMT_SOLVER_FALSE = 
ROSE_USE_TEST_SMT_SOLVER_TRUE = #
ROSE_USE_TRACE_ANALYSIS_FALSE = 
ROSE_USE_TRACE_ANALYSIS_TRUE = #
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = 
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE = 
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE = #
ROSE_USE_VISUALIZATION_FALSE = 
ROSE_USE_VISUALIZATION_TRUE = #
ROSE_USE_WGET_FALSE = #
ROSE_USE_WGET_TRUE = 
ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE = 
ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE = #
ROSE_USE_XML_FALSE = 
ROSE_USE_XML_TRUE = #
ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_FALSE = 
ROSE_USING_ALTERNATE_BACKEND_CXX_COMPILER_TRUE = #
ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_FALSE = 
ROSE_USING_ALTERNATE_BACKEND_C_COMPILER_TRUE = #
ROSE_USING_BOOST_VERSION_1_35_FALSE = 
ROSE_USING_BOOST_VERSION_1_35_TRUE = #
ROSE_USING_BOOST_VERSION_1_36_FALSE = 
ROSE_USING_BOOST_VERSION_1_36_TRUE = #
ROSE_USING_BOOST_VERSION_1_37_FALSE = 
ROSE_USING_BOOST_VERSION_1_37_TRUE = #
ROSE_USING_BOOST_VERSION_1_38_FALSE = 
ROSE_USING_BOOST_VERSION_1_38_TRUE = #
ROSE_USING_BOOST_VERSION_1_39_FALSE = 
ROSE_USING_BOOST_VERSION_1_39_TRUE = #
ROSE_USING_BOOST_VERSION_1_40_FALSE = 
ROSE_USING_BOOST_VERSION_1_40_TRUE = #
ROSE_USING_BOOST_VERSION_1_41_FALSE = 
ROSE_USING_BOOST_VERSION_1_41_TRUE = #
ROSE_USING_BOOST_VERSION_1_42_FALSE = 
ROSE_USING_BOOST_VERSION_1_42_TRUE = #
ROSE_USING_BOOST_VERSION_1_43_FALSE = 
ROSE_USING_BOOST_VERSION_1_43_TRUE = #
ROSE_USING_BOOST_VERSION_1_44_FALSE = 
ROSE_USING_BOOST_VERSION_1_44_TRUE = #
ROSE_USING_BOOST_VERSION_1_45_FALSE = 
ROSE_USING_BOOST_VERSION_1_45_TRUE = #
ROSE_USING_BOOST_VERSION_1_46_FALSE = 
ROSE_USING_BOOST_VERSION_1_46_TRUE = #
ROSE_USING_BOOST_VERSION_1_47_FALSE = 
ROSE_USING_BOOST_VERSION_1_47_TRUE = #
ROSE_USING_BOOST_VERSION_1_48_FALSE = 
ROSE_USING_BOOST_VERSION_1_48_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_0_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_0_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_1_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_1_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_2_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_2_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_4_FALSE = #
ROSE_USING_GFORTRAN_VERSION_4_4_TRUE = 
ROSE_USING_GFORTRAN_VERSION_4_5_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_5_TRUE = #
ROSE_USING_GFORTRAN_VERSION_4_6_FALSE = 
ROSE_USING_GFORTRAN_VERSION_4_6_TRUE = #
ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE = 
ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE = #
ROSE_USING_ROSE_ANALYSIS_FALSE = 
ROSE_USING_ROSE_ANALYSIS_TRUE = #
ROSE_USING_ROSE_AST_FILE_IO_FALSE = 
ROSE_USING_ROSE_AST_FILE_IO_TRUE = #
ROSE_USING_ROSE_CODE_GENERATION_FALSE = 
ROSE_USING_ROSE_CODE_GENERATION_TRUE = #
ROSE_USING_ROSE_FALSE = 
ROSE_USING_ROSE_TRANSLATOR_FALSE = 
ROSE_USING_ROSE_TRANSLATOR_TRUE = #
ROSE_USING_ROSE_TRUE = #
ROSE_WGET_PATH = wget
ROSE_WITH_GMP_FALSE = 
ROSE_WITH_GMP_INCLUDE_FALSE = 
ROSE_WITH_GMP_INCLUDE_TRUE = #
ROSE_WITH_GMP_TRUE = #
ROSE_WITH_ISL_FALSE = 
ROSE_WITH_ISL_INCLUDE_FALSE = 
ROSE_WITH_ISL_INCLUDE_TRUE = #
ROSE_WITH_ISL_TRUE = #
ROSE_WITH_ROSEQT_FALSE = 
ROSE_WITH_ROSEQT_TRUE = #
ROSE_WITH_UPC_FALSE = 
ROSE_WITH_UPC_TRUE = #
ROSE_YICES = 
ROSE_YICES_PREFIX = 
RT_LIBS = -lrt -ldl -ldl 
SCOPLIB_PATH = 
SED = sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3_CFLAGS = 
SQLITE3_LDFLAGS = 
SQLITE3_VERSION = 
STRIP = strip
SWIG = /usr/bin/swig -c++
SWIG_LIB = /usr/share/swig/1.3.40
TCLSH = 
TEST_SMT_SOLVER = 
UIC = NONE/uic
UPC = 
UPCDEPMODE = 
UPCFLAGS = 
USE_BINARY_ANALYSIS_TESTS_FALSE = #
USE_BINARY_ANALYSIS_TESTS_TRUE = 
USE_GCJ_FALSE = 
USE_GCJ_TRUE = #
USE_HASKELL_FALSE = 
USE_HASKELL_TRUE = #
USE_ROSE_GLUT_SUPPORT_FALSE = 
USE_ROSE_GLUT_SUPPORT_TRUE = #
USE_ROSE_IN_BUILD_TREE_VAR_FALSE = 
USE_ROSE_IN_BUILD_TREE_VAR_TRUE = #
USE_VALGRIND_FALSE = 
USE_VALGRIND_TRUE = #
USING_GCC_3_4_4_BACKEND_COMPILER_FALSE = 
USING_GCC_3_4_4_BACKEND_COMPILER_TRUE = #
USING_GCC_4_0_4_BACKEND_COMPILER_FALSE = 
USING_GCC_4_0_4_BACKEND_COMPILER_TRUE = #
USING_GNU_COMPILER_FALSE = #
USING_GNU_COMPILER_TRUE = 
USING_INTEL_COMPILER_FALSE = 
USING_INTEL_COMPILER_TRUE = #
USING_WINDOWS = 0
USING_XTENSA_BACKEND_COMPILER_FALSE = 
USING_XTENSA_BACKEND_COMPILER_TRUE = #
VALGRIND_BINARY = 
VERSION = 0.9.5a
WITH_GOMP_OPENMP_LIB_FALSE = 
WITH_GOMP_OPENMP_LIB_TRUE = #
XERCES_CPPFLAGS = 
XERCES_LDFLAGS = 
XERCES_LIBS = 
XERCES_VERSION = 
XMKMF = 
XML2_CONFIG = no
XML_CPPFLAGS = 
XML_LIBS = 
X_CFLAGS =  -INONE
X_EXTRA_LIBS = 
X_LIBS =  -LNONE
X_PRE_LIBS = 
YACC = bison -y
YFLAGS = 
absolute_path_srcdir = /home/bronevet/Downloads/rose
ac_boost_path = /home/bronevet/apps/boost
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_MPICXX = 
ac_ct_UPC = 
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__fastdepUPC_FALSE = 
am__fastdepUPC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
backstroke_ross_path = 
backstroke_speedes_path = 
bddbddb_path = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_triplet_without_redhat = x86_64-pc-linux-gnu
build_vendor = unknown
configure_date = Friday July 27 15:54:01 2012
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
dwarf_path = 
edg_union_struct_debugging_value = union
exec_prefix = ${prefix}
glut_path = 
gomp_omp_runtime_library_path = 
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
ida_path = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/bronevet/Downloads/rose/config/install-sh
insure_BIN = 
insure_LIBS = 
insure_PREFIX = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
llvm_path = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${datarootdir}/man
maple_path = 
mkdir_p = mkdir -p --
oldincludedir = /usr/include
omni_omp_runtime_support_path = 
optional_Visualization_subdirs = 
parallel_ast_traversal_omp_path = 
pdfdir = ${docdir}
php_path = 
poet_dir = /src/3rdPartyLibraries/POET
prefix = /home/bronevet/apps/rose
program_transform_name = s,x,x,
psdir = ${docdir}
purify_BIN = 
purify_INCLUDES = 
purify_LIBS = 
purify_PREFIX = 
rted_path = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs =  libltdl src/3rdPartyLibraries/libharu-2.1.0
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_pwd = /home/bronevet/Downloads/rose/compile
wine_path = 

# SQLite is a simpler database to use than MySQL
#ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
#SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
#SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
#ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
#ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
#ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
#ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library 
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
#ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
#ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
#ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
#ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
#ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
#ROSE_ROSEHPCT_LIBS = -lrosehpct
#ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
#ROSE_YICES_INCLUDES = -I/include
#ROSE_YICES_LIBS = -lyices
#ROSE_YICES_LIBS_WITH_PATH = /lib/libyices.a
GLUT_LIBS = ${glut_path}

# ROSE-DWARF libdwarf support
#ROSE_DWARF_INCLUDES = -I$(dwarf_path)
# DQ (3/15/2009): Use the usual static linking when not using Intel Pin (what we used to do).
# DQ (3/13/2009): Fixup libdwarf support in ROSE to always use the dynamic (shared) library.
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(dwarf_path) -L$(dwarf_path) -ldwarf -lelf
# DQ (6/5/2010): Fixed to use the value set in the configure step (requires the dynamic library).
# ROSE_DWARF_LIBS_WITH_PATH = $(dwarf_path)/libdwarf.a -lelf
#ROSE_DWARF_LIBS_WITH_PATH = 

# DQ (3/13/2009): These do not appear to be used anywhere.
# ROSE_DWARF_LIBS = -ldwarf
# ROSE_DWARF_LIB_FILE = libdwarf.a

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for 
# dwarf when used with Intel Pin.
# ROSE_DWARF_LIBS_WITH_PATH = $(INTEL_PIN_PATH)/intel64/lib-ext/libdwarf.a -lelf
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(INTEL_PIN_PATH)/intel64/lib-ext -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
##ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
##INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
#ROSE_WINE_INCLUDES = -I$(wine_path)/include
#ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
#ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
#ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
#ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
#ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
#	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
#	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
#	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
#	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
#	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
#	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
#	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
#	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
#	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
#	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
#	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
#	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
#	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
#	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
#	-lLLVMInstrumentation -lLLVMJIT \
#	-lLLVMExecutionEngine -lLLVMCppBackend \
#	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
#	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
#	-lLLVMCBackend -lLLVMCBackendInfo \
#	-lLLVMBlackfinCodeGen \
#	-lLLVMBlackfinAsmPrinter \
#	-lLLVMBlackfinInfo -lLLVMBitWriter \
#	-lLLVMX86Disassembler -lLLVMX86AsmParser \
#	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
#	-lLLVMX86Info -lLLVMAsmParser \
#	-lLLVMARMAsmParser -lLLVMMCParser \
#	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
#	-lLLVMARMInfo -lLLVMArchive \
#	-lLLVMBitReader -lLLVMAlphaCodeGen \
#	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
#	-lLLVMAsmPrinter -lLLVMCodeGen \
#	-lLLVMScalarOpts -lLLVMInstCombine \
#	-lLLVMTransformUtils -lLLVMipa \
#	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
#	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
#	-lLLVMSystem

# adding all libraries for now

# SSL support permits use of MD5 checksums internally for binary library identification.
#ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
#ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
#INTEL_PIN_PATH = 
#INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
#INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
#INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_USE_DWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
#ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
#ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
#ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
ROSE_INCLUDES = \
     $(ROSE_BOOST_PREINCLUDE_PATH) \
     -I$(top_builddir)/src/roseSupport \
     -I$(top_builddir)/src/frontend/SageIII \
     -I$(top_srcdir)/src \
     -I$(top_srcdir)/src/frontend/SageIII \
     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
     -I$(top_srcdir)/src/frontend/PHPFrontend \
     -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend \
     -I$(top_srcdir)/src/frontend/PythonFrontend \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
     -I$(top_srcdir)/src/frontend/BinaryFormats \
     -I$(top_srcdir)/src/frontend/BinaryLoader \
     -I$(top_srcdir)/src/frontend/Disassemblers \
     -I$(top_srcdir)/src/frontend/CxxFrontend/Clang \
     -I$(top_srcdir)/src/backend/unparser \
     -I$(top_srcdir)/src/backend/unparser/formatSupport \
     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
     -I$(top_srcdir)/src/backend/asmUnparser \
     -I$(top_srcdir)/src/util \
     -I$(top_srcdir)/src/util/support \
     -I$(top_srcdir)/src/util/graphs  \
     -I$(top_srcdir)/src/util/stringSupport \
     -I$(top_srcdir)/src/util/commandlineProcessing \
     -I$(top_srcdir)/src/midend/abstractHandle \
     -I$(top_srcdir)/src/midend/abstractMemoryObject \
     -I$(top_srcdir)/src/midend/astDiagnostics \
     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
     -I$(top_srcdir)/src/midend/astProcessing \
     -I$(top_srcdir)/src/midend/astQuery \
     -I$(top_srcdir)/src/midend/astRewriteMechanism \
     -I$(top_srcdir)/src/midend/astUtil/annotation \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/src/midend/astUtil/astSupport \
     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
     -I$(top_srcdir)/src/midend/binaryAnalyses \
     -I$(top_srcdir)/src/midend/binaryAnalyses/dataflowanalyses \
     -I$(top_srcdir)/src/midend/binaryAnalyses/instructionSemantics \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
     -I$(top_srcdir)/src/midend/programAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/graphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
      $(ROSE_SIDEEFFECTS_INCLUDE) \
      $(ROSE_DATABASE_INCLUDE) \
      $(ROSE_GUI_INCLUDE) \
      $(ROSE_QT_INCLUDE) \
      $(ROSE_SQLITE_DATABASE_INCLUDE) \
			$(ROSE_SIDEEFFECT_INCLUDE) \
      $(SQLITE_DATABASE_INCLUDE) \
     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
     -I$(top_srcdir)/src/roseSupport \
     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
     -I$(top_srcdir)/src/util/graphs \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/libltdl \
     $(ROSE_PHP_INCLUDES) \
     $(ROSE_PYTHON_INCLUDES) \
     $(ROSE_YICES_INCLUDES) \
     $(ROSE_DWARF_INCLUDES) \
     $(ROSE_WINE_INCLUDES) \
     $(VALGRIND_CFLAGS) \
     $(SQLITE3_CFLAGS) \
     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA \
     $(ROSE_PCH_INCLUDE) \
     $(INTEL_PIN_INCLUDE_PATHS) \
     $(ROSE_ETHER_INCLUDE)


# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the 
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
#ROSE_INCLUDES = \
#     $(ROSE_BOOST_PREINCLUDE_PATH) \
#     -I$(top_builddir)/src/roseSupport \
#     -I$(top_builddir)/src/frontend/SageIII \
#     -I$(top_srcdir)/src \
#     -I$(top_srcdir)/src/frontend/SageIII \
#     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
#     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
#     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
#     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
#     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
#     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
#     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
#     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
#     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
#     -I$(top_srcdir)/src/frontend/BinaryFormats \
#     -I$(top_srcdir)/src/frontend/BinaryLoader \
#     -I$(top_srcdir)/src/frontend/Disassemblers \
#     -I$(top_srcdir)/src/backend/unparser \
#     -I$(top_srcdir)/src/backend/unparser/formatSupport \
#     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
#     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
#     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
#     -I$(top_srcdir)/src/backend/asmUnparser \
#     -I$(top_srcdir)/src/util \
#     -I$(top_srcdir)/src/util/support \
#     -I$(top_srcdir)/src/util/graphs  \
#     -I$(top_srcdir)/src/util/stringSupport \
#     -I$(top_srcdir)/src/util/commandlineProcessing \
#     -I$(top_srcdir)/src/midend/astDiagnostics \
#     -I$(top_srcdir)/src/midend/astProcessing \
#     -I$(top_srcdir)/src/midend/astQuery \
#     -I$(top_srcdir)/src/midend/binaryAnalyses \
#     -I$(top_srcdir)/src/midend/programAnalysis \
#     -I$(top_srcdir)/src/roseSupport \
#     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
#     -I$(top_srcdir)/src/util/graphs \
#     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA 


# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph 
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer 
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they 
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently 
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)
ROSE_LIBS = $(top_builddir)/src/librose.la -lm  $(JAVA_JVM_LINK) \
  $(SQLITE_DATABASE_LIBS) $(QT_LIBS)  $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(SQLITE3_LDFLAGS)  $(RT_LIBS) \
  $(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
  $(ROSE_GUI_LIBS_WITH_PATH) $(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
  $(ROSE_INTEL_COMPILER_MATH_LIBS)


# DQ (3/13/2009): Removed this from ROSE_LIBS because libtool warnings say it should be in AM_LDFLAGS
# (this is because it has been moved from being linked statically to being linked dynamically).
# $(ROSE_DWARF_LIBS_WITH_PATH)
# AM_LDFLAGS = $(ROSE_DWARF_LIBS_WITH_PATH)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext
# DQ (3/14/2009): Need to add rpath to LDFLAGS instead of LDADD (to follow libtool rules).
# LDFLAGS += $(ROSE_DWARF_LIBS_WITH_PATH)

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)
#   $(LIB_QT) $(JAVA_JVM_LIB) 

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS 

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly 
# with make distcheck rule 
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Location of sample binary files (executables, libraries, etc) that serve as input to
# some of the binary analysis tests.
BINARY_SAMPLES = $(top_srcdir)/binaries/samples

# Test harness variables. See "rth_run.pl --help" for more info.
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl \
	srcdir=$(srcdir) top_srcdir=$(top_srcdir) \
	VALGRIND=$(VALGRIND) BINARY_SAMPLES=$(BINARY_SAMPLES)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl

# Liao, Jan. 9, 2008
# Makefile.am for a set of test AST builders and test input code
#-------------------------------------------------------------
INCLUDES = \
        $(ROSE_INCLUDES) \
        -I$(top_srcdir)/src/frontend/SageIII/sageInterface


# list of test SAGE AST builders 
fixVariableReferences_SOURCES = fixVariableReferences.C 
annotateExpressionsWithUniqueNames_SOURCES = annotateExpressionsWithUniqueNames.C
deepDelete_SOURCES = deepDelete.C 
buildFunctionDeclaration_SOURCES = buildFunctionDeclaration.C
buildNondefiningFunction_SOURCES = buildNondefiningFunction.C
findMain_SOURCES = findMain.C
buildVariableDeclaration_SOURCES = buildVariableDeclaration.C
buildAssignmentStmt_SOURCES = buildAssignmentStmt.C
buildFunctionCalls_SOURCES = buildFunctionCalls.C 
buildPragmaDeclaration_SOURCES = buildPragmaDeclaration.C
attachComment_SOURCES = attachComment.C
insertHeader_SOURCES = insertHeader.C
buildExpression_SOURCES = buildExpression.C
buildStructDeclaration_SOURCES = buildStructDeclaration.C
buildStructDeclaration2_SOURCES = buildStructDeclaration2.C
lookupNamedType_SOURCES = lookupNamedType.C           
buildFile_SOURCES = buildFile.C           
movePreprocessingInfo_SOURCES = movePreprocessingInfo.C
buildIfStmt_SOURCES = buildIfStmt.C
buildCpreprocessorDefineDeclaration_SOURCES = buildCpreprocessorDefineDeclaration.C
instrumentEndOfFunction_SOURCES = instrumentEndOfFunction.C
isUpcSharedType_SOURCES = isUpcSharedType.C
isUpcPhaseLessSharedType_SOURCES = isUpcPhaseLessSharedType.C
buildLabelStatement_SOURCES = buildLabelStatement.C
buildSizeOfOp_SOURCES = buildSizeOfOp.C
abiStuffTest_SOURCES = abiStuffTest.C
abiStuffTestUPC_SOURCES = abiStuffTestUPC.C
buildNullStatement_SOURCES = buildNullStatement.C
buildForStmt_SOURCES = buildForStmt.C
canonicalLoop_SOURCES = canonicalLoop.C
loopNormalization_SOURCES = loopNormalization.C 
collectReadWriteVariables_SOURCES = collectReadWriteVariables.C
typeTraits_SOURCES = typeTraits.C
livenessAnalysis_SOURCES = livenessAnalysis.C
buildProcedureHeaderStatement_SOURCES = buildProcedureHeaderStatement.C
replaceMacroCalls_SOURCES = replaceMacroCalls.C
buildAbstractHandle_SOURCES = buildAbstractHandle.C
buildTypedefDeclaration_SOURCES = buildTypedefDeclaration.C
loopUnrolling_SOURCES = loopUnrolling.C
getDependentDecls_SOURCES = getDependentDecls.C
loopInterchange_SOURCES = loopInterchange.C
loopTiling_SOURCES = loopTiling.C
insertStatementBeforeFunction_SOURCES = insertStatementBeforeFunction.C
removeStatementCommentRelocation_SOURCES = removeStatementCommentRelocation.C
generateUniqueName_SOURCES = generateUniqueName.C
buildExternalStatement_SOURCES = buildExternalStatement.C
buildCommonBlock_SOURCES = buildCommonBlock.C
doLoopNormalization_SOURCES = doLoopNormalization.C
buildLabelStatement2_SOURCES = buildLabelStatement2.C
replaceWithPattern_SOURCES = replaceWithPattern.C
insertBeforeUsingCommaOp_SOURCES = insertBeforeUsingCommaOp.C
insertAfterUsingCommaOp_SOURCES = insertAfterUsingCommaOp.C
deepCopy_SOURCES = deepCopy.C

# libsageInterface.la is included in rose.la already?
LDADD = $(ROSE_LIBS)

#    $(top_builddir)/src/frontend/SageIII/sageInterface/libsageInterface.la 
# Be sure to include proper suffixes, like .C
# TODO: handle side effects when deleting AST nodes
#failing_generatedCodeExamples = rose_inputdeepDelete.C 
generatedCodeExamples = rose_inputfixVariableReferences.C \
	rose_inputBlank1.C rose_inputBlank2.C rose_inputfindMain.C \
	rose_inputbuildVariableDeclaration.C \
	rose_inputbuildAssignmentStmt.C rose_inputbuildFunctionCalls.C \
	rose_inputbuildPragmaDeclaration.c rose_inputAttachComment.C \
	rose_inputInsertHeader.C rose_inputbuildExpression.C \
	rose_inputbuildStructDeclaration.C \
	rose_inputbuildStructDeclaration2.C \
	rose_inputLookupNamedType.C rose_inputbuildFile.C \
	rose_inputMovePreprocessingInfo.C rose_inputbuildIfStmt.C \
	rose_inputbuildCpreprocessorDefineDeclaration.C \
	rose_inputinstrumentEndOfFunction.C \
	rose_inputisUpcSharedType.upc \
	rose_inputisUpcPhaseLessSharedType.upc \
	rose_inputbuildLabelStatement.C rose_inputbuildSizeOfOp.C \
	abiStuffTestDone rose_inputAbiStuffTestUPC.upc \
	rose_inputbuildNullStatement.C rose_inputbuildForStmt.C \
	rose_inputcanonicalLoop.C \
	rose_inputcollectReadWriteVariables.C rose_inputtypeTraits.C \
	rose_inputlivenessAnalysis.C rose_inputreplaceMacroCalls.C \
	rose_inputbuildAbstractHandle.C \
	rose_inputbuildTypedefDeclaration.C rose_inputloopUnrolling.C \
	rose_inputgetDependentDecls.C rose_inputloopInterchange.C \
	rose_inputloopTiling.C rose_inputloopNormalization.C \
	rose_inputdeepDelete.C \
	rose_inputinsertStatementBeforeFunction.C \
	rose_inputRemoveStatementCommentRelocation.C \
	rose_inputgenerateUniqueName.C \
	rose_inputannotateExpressionsWithUniqueNames.C \
	rose_inputreplaceWithPattern.C \
	rose_inputinsertBeforeUsingCommaOp.C \
	rose_inputinsertAfterUsingCommaOp.C rose_inputdeepCopy.C \
	$(am__append_1)

# turn off edg warnings such as "variable x declared but never referenced" for test input files
TEST_CXXFLAGS = -rose:verbose 0 --edg:no_warnings -g3

# MUST keep this up-to-date!!
EXTRA_DIST = inputBlank1.C inputBlank2.C inputfindMain.C inputbuildVariableDeclaration.C \
       inputbuildAssignmentStmt.C inputbuildFunctionCalls.C inputbuildFunctionCalls.h \
       inputbuildPragmaDeclaration.c inputAttachComment.C inputInsertHeader.C \
       inputbuildExpression.C inputbuildStructDeclaration.C inputLookupNamedType.C \
       inputbuildFile.C inputMovePreprocessingInfo.C inputbuildIfStmt.C \
       inputbuildCpreprocessorDefineDeclaration.C inputinstrumentEndOfFunction.C \
       inputisUpcSharedType.upc inputisUpcPhaseLessSharedType.upc inputbuildLabelStatement.C \
       inputbuildSizeOfOp.C inputAbiStuffTest.c inputAbiStuffTestUPC.upc \
       inputbuildNullStatement.C inputbuildForStmt.C inputcanonicalLoop.C \
       inputloopNormalization.C inputcollectReadWriteVariables.C inputtypeTraits.C \
       inputlivenessAnalysis.C inputbuildProcedureHeaderStatement.f inputreplaceMacroCalls.C \
       inputbuildAbstractHandle.C inputloopUnrolling.C inputgetDependentDecls.C \
       inputloopInterchange.C inputloopTiling.C inputbuildStructDeclaration2.C \
       inputbuildTypedefDeclaration.C inputdeepDelete.C \
       inputinsertStatementBeforeFunction.C inputinsertStatementBeforeFunction_1.h \
       inputinsertStatementBeforeFunction_2.h inputRemoveStatementCommentRelocation.C \
       inputRemoveStatementCommentRelocation_1.h inputRemoveStatementCommentRelocation_2.h \
       inputRemoveStatementCommentRelocation_withBottomBoundingStatement.C \
       inputRemoveStatementCommentRelocation_withTopBoundingStatement.C \
       inputRemoveStatementCommentRelocation_withTopandBottomBoundingStatement.C \
       inputRemoveStatementCommentRelocation_withoutBottomBoundingStatement.C \
       inputRemoveStatementCommentRelocation_withoutTopBoundingStatement.C \
       inputRemoveStatementCommentRelocation_withoutTopandBottomBoundingStatement.C \
       inputgenerateUniqueName.C inputannotateExpressionsWithUniqueNames.C \
       inputbuildExternalStatement.f inputbuildCommonBlock.f inputdoLoopNormalization.f \
       inputbuildLabelStatement2.f inputreplaceWithPattern.C inputinsertBeforeUsingCommaOp.C \
       inputinsertAfterUsingCommaOp.C inputdeepCopy.C inputfixVariableReferences.C

all: all-am

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  --ignore-deps tests/roseTests/astInterfaceTests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps tests/roseTests/astInterfaceTests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
abiStuffTest$(EXEEXT): $(abiStuffTest_OBJECTS) $(abiStuffTest_DEPENDENCIES) 
	@rm -f abiStuffTest$(EXEEXT)
	$(CXXLINK) $(abiStuffTest_LDFLAGS) $(abiStuffTest_OBJECTS) $(abiStuffTest_LDADD) $(LIBS)
abiStuffTestUPC$(EXEEXT): $(abiStuffTestUPC_OBJECTS) $(abiStuffTestUPC_DEPENDENCIES) 
	@rm -f abiStuffTestUPC$(EXEEXT)
	$(CXXLINK) $(abiStuffTestUPC_LDFLAGS) $(abiStuffTestUPC_OBJECTS) $(abiStuffTestUPC_LDADD) $(LIBS)
annotateExpressionsWithUniqueNames$(EXEEXT): $(annotateExpressionsWithUniqueNames_OBJECTS) $(annotateExpressionsWithUniqueNames_DEPENDENCIES) 
	@rm -f annotateExpressionsWithUniqueNames$(EXEEXT)
	$(CXXLINK) $(annotateExpressionsWithUniqueNames_LDFLAGS) $(annotateExpressionsWithUniqueNames_OBJECTS) $(annotateExpressionsWithUniqueNames_LDADD) $(LIBS)
attachComment$(EXEEXT): $(attachComment_OBJECTS) $(attachComment_DEPENDENCIES) 
	@rm -f attachComment$(EXEEXT)
	$(CXXLINK) $(attachComment_LDFLAGS) $(attachComment_OBJECTS) $(attachComment_LDADD) $(LIBS)
buildAbstractHandle$(EXEEXT): $(buildAbstractHandle_OBJECTS) $(buildAbstractHandle_DEPENDENCIES) 
	@rm -f buildAbstractHandle$(EXEEXT)
	$(CXXLINK) $(buildAbstractHandle_LDFLAGS) $(buildAbstractHandle_OBJECTS) $(buildAbstractHandle_LDADD) $(LIBS)
buildAssignmentStmt$(EXEEXT): $(buildAssignmentStmt_OBJECTS) $(buildAssignmentStmt_DEPENDENCIES) 
	@rm -f buildAssignmentStmt$(EXEEXT)
	$(CXXLINK) $(buildAssignmentStmt_LDFLAGS) $(buildAssignmentStmt_OBJECTS) $(buildAssignmentStmt_LDADD) $(LIBS)
buildCommonBlock$(EXEEXT): $(buildCommonBlock_OBJECTS) $(buildCommonBlock_DEPENDENCIES) 
	@rm -f buildCommonBlock$(EXEEXT)
	$(CXXLINK) $(buildCommonBlock_LDFLAGS) $(buildCommonBlock_OBJECTS) $(buildCommonBlock_LDADD) $(LIBS)
buildCpreprocessorDefineDeclaration$(EXEEXT): $(buildCpreprocessorDefineDeclaration_OBJECTS) $(buildCpreprocessorDefineDeclaration_DEPENDENCIES) 
	@rm -f buildCpreprocessorDefineDeclaration$(EXEEXT)
	$(CXXLINK) $(buildCpreprocessorDefineDeclaration_LDFLAGS) $(buildCpreprocessorDefineDeclaration_OBJECTS) $(buildCpreprocessorDefineDeclaration_LDADD) $(LIBS)
buildExpression$(EXEEXT): $(buildExpression_OBJECTS) $(buildExpression_DEPENDENCIES) 
	@rm -f buildExpression$(EXEEXT)
	$(CXXLINK) $(buildExpression_LDFLAGS) $(buildExpression_OBJECTS) $(buildExpression_LDADD) $(LIBS)
buildExternalStatement$(EXEEXT): $(buildExternalStatement_OBJECTS) $(buildExternalStatement_DEPENDENCIES) 
	@rm -f buildExternalStatement$(EXEEXT)
	$(CXXLINK) $(buildExternalStatement_LDFLAGS) $(buildExternalStatement_OBJECTS) $(buildExternalStatement_LDADD) $(LIBS)
buildFile$(EXEEXT): $(buildFile_OBJECTS) $(buildFile_DEPENDENCIES) 
	@rm -f buildFile$(EXEEXT)
	$(CXXLINK) $(buildFile_LDFLAGS) $(buildFile_OBJECTS) $(buildFile_LDADD) $(LIBS)
buildForStmt$(EXEEXT): $(buildForStmt_OBJECTS) $(buildForStmt_DEPENDENCIES) 
	@rm -f buildForStmt$(EXEEXT)
	$(CXXLINK) $(buildForStmt_LDFLAGS) $(buildForStmt_OBJECTS) $(buildForStmt_LDADD) $(LIBS)
buildFunctionCalls$(EXEEXT): $(buildFunctionCalls_OBJECTS) $(buildFunctionCalls_DEPENDENCIES) 
	@rm -f buildFunctionCalls$(EXEEXT)
	$(CXXLINK) $(buildFunctionCalls_LDFLAGS) $(buildFunctionCalls_OBJECTS) $(buildFunctionCalls_LDADD) $(LIBS)
buildFunctionDeclaration$(EXEEXT): $(buildFunctionDeclaration_OBJECTS) $(buildFunctionDeclaration_DEPENDENCIES) 
	@rm -f buildFunctionDeclaration$(EXEEXT)
	$(CXXLINK) $(buildFunctionDeclaration_LDFLAGS) $(buildFunctionDeclaration_OBJECTS) $(buildFunctionDeclaration_LDADD) $(LIBS)
buildIfStmt$(EXEEXT): $(buildIfStmt_OBJECTS) $(buildIfStmt_DEPENDENCIES) 
	@rm -f buildIfStmt$(EXEEXT)
	$(CXXLINK) $(buildIfStmt_LDFLAGS) $(buildIfStmt_OBJECTS) $(buildIfStmt_LDADD) $(LIBS)
buildLabelStatement$(EXEEXT): $(buildLabelStatement_OBJECTS) $(buildLabelStatement_DEPENDENCIES) 
	@rm -f buildLabelStatement$(EXEEXT)
	$(CXXLINK) $(buildLabelStatement_LDFLAGS) $(buildLabelStatement_OBJECTS) $(buildLabelStatement_LDADD) $(LIBS)
buildLabelStatement2$(EXEEXT): $(buildLabelStatement2_OBJECTS) $(buildLabelStatement2_DEPENDENCIES) 
	@rm -f buildLabelStatement2$(EXEEXT)
	$(CXXLINK) $(buildLabelStatement2_LDFLAGS) $(buildLabelStatement2_OBJECTS) $(buildLabelStatement2_LDADD) $(LIBS)
buildNondefiningFunction$(EXEEXT): $(buildNondefiningFunction_OBJECTS) $(buildNondefiningFunction_DEPENDENCIES) 
	@rm -f buildNondefiningFunction$(EXEEXT)
	$(CXXLINK) $(buildNondefiningFunction_LDFLAGS) $(buildNondefiningFunction_OBJECTS) $(buildNondefiningFunction_LDADD) $(LIBS)
buildNullStatement$(EXEEXT): $(buildNullStatement_OBJECTS) $(buildNullStatement_DEPENDENCIES) 
	@rm -f buildNullStatement$(EXEEXT)
	$(CXXLINK) $(buildNullStatement_LDFLAGS) $(buildNullStatement_OBJECTS) $(buildNullStatement_LDADD) $(LIBS)
buildPragmaDeclaration$(EXEEXT): $(buildPragmaDeclaration_OBJECTS) $(buildPragmaDeclaration_DEPENDENCIES) 
	@rm -f buildPragmaDeclaration$(EXEEXT)
	$(CXXLINK) $(buildPragmaDeclaration_LDFLAGS) $(buildPragmaDeclaration_OBJECTS) $(buildPragmaDeclaration_LDADD) $(LIBS)
buildProcedureHeaderStatement$(EXEEXT): $(buildProcedureHeaderStatement_OBJECTS) $(buildProcedureHeaderStatement_DEPENDENCIES) 
	@rm -f buildProcedureHeaderStatement$(EXEEXT)
	$(CXXLINK) $(buildProcedureHeaderStatement_LDFLAGS) $(buildProcedureHeaderStatement_OBJECTS) $(buildProcedureHeaderStatement_LDADD) $(LIBS)
buildSizeOfOp$(EXEEXT): $(buildSizeOfOp_OBJECTS) $(buildSizeOfOp_DEPENDENCIES) 
	@rm -f buildSizeOfOp$(EXEEXT)
	$(CXXLINK) $(buildSizeOfOp_LDFLAGS) $(buildSizeOfOp_OBJECTS) $(buildSizeOfOp_LDADD) $(LIBS)
buildStructDeclaration$(EXEEXT): $(buildStructDeclaration_OBJECTS) $(buildStructDeclaration_DEPENDENCIES) 
	@rm -f buildStructDeclaration$(EXEEXT)
	$(CXXLINK) $(buildStructDeclaration_LDFLAGS) $(buildStructDeclaration_OBJECTS) $(buildStructDeclaration_LDADD) $(LIBS)
buildStructDeclaration2$(EXEEXT): $(buildStructDeclaration2_OBJECTS) $(buildStructDeclaration2_DEPENDENCIES) 
	@rm -f buildStructDeclaration2$(EXEEXT)
	$(CXXLINK) $(buildStructDeclaration2_LDFLAGS) $(buildStructDeclaration2_OBJECTS) $(buildStructDeclaration2_LDADD) $(LIBS)
buildTypedefDeclaration$(EXEEXT): $(buildTypedefDeclaration_OBJECTS) $(buildTypedefDeclaration_DEPENDENCIES) 
	@rm -f buildTypedefDeclaration$(EXEEXT)
	$(CXXLINK) $(buildTypedefDeclaration_LDFLAGS) $(buildTypedefDeclaration_OBJECTS) $(buildTypedefDeclaration_LDADD) $(LIBS)
buildVariableDeclaration$(EXEEXT): $(buildVariableDeclaration_OBJECTS) $(buildVariableDeclaration_DEPENDENCIES) 
	@rm -f buildVariableDeclaration$(EXEEXT)
	$(CXXLINK) $(buildVariableDeclaration_LDFLAGS) $(buildVariableDeclaration_OBJECTS) $(buildVariableDeclaration_LDADD) $(LIBS)
canonicalLoop$(EXEEXT): $(canonicalLoop_OBJECTS) $(canonicalLoop_DEPENDENCIES) 
	@rm -f canonicalLoop$(EXEEXT)
	$(CXXLINK) $(canonicalLoop_LDFLAGS) $(canonicalLoop_OBJECTS) $(canonicalLoop_LDADD) $(LIBS)
collectReadWriteVariables$(EXEEXT): $(collectReadWriteVariables_OBJECTS) $(collectReadWriteVariables_DEPENDENCIES) 
	@rm -f collectReadWriteVariables$(EXEEXT)
	$(CXXLINK) $(collectReadWriteVariables_LDFLAGS) $(collectReadWriteVariables_OBJECTS) $(collectReadWriteVariables_LDADD) $(LIBS)
deepCopy$(EXEEXT): $(deepCopy_OBJECTS) $(deepCopy_DEPENDENCIES) 
	@rm -f deepCopy$(EXEEXT)
	$(CXXLINK) $(deepCopy_LDFLAGS) $(deepCopy_OBJECTS) $(deepCopy_LDADD) $(LIBS)
deepDelete$(EXEEXT): $(deepDelete_OBJECTS) $(deepDelete_DEPENDENCIES) 
	@rm -f deepDelete$(EXEEXT)
	$(CXXLINK) $(deepDelete_LDFLAGS) $(deepDelete_OBJECTS) $(deepDelete_LDADD) $(LIBS)
doLoopNormalization$(EXEEXT): $(doLoopNormalization_OBJECTS) $(doLoopNormalization_DEPENDENCIES) 
	@rm -f doLoopNormalization$(EXEEXT)
	$(CXXLINK) $(doLoopNormalization_LDFLAGS) $(doLoopNormalization_OBJECTS) $(doLoopNormalization_LDADD) $(LIBS)
findMain$(EXEEXT): $(findMain_OBJECTS) $(findMain_DEPENDENCIES) 
	@rm -f findMain$(EXEEXT)
	$(CXXLINK) $(findMain_LDFLAGS) $(findMain_OBJECTS) $(findMain_LDADD) $(LIBS)
fixVariableReferences$(EXEEXT): $(fixVariableReferences_OBJECTS) $(fixVariableReferences_DEPENDENCIES) 
	@rm -f fixVariableReferences$(EXEEXT)
	$(CXXLINK) $(fixVariableReferences_LDFLAGS) $(fixVariableReferences_OBJECTS) $(fixVariableReferences_LDADD) $(LIBS)
generateUniqueName$(EXEEXT): $(generateUniqueName_OBJECTS) $(generateUniqueName_DEPENDENCIES) 
	@rm -f generateUniqueName$(EXEEXT)
	$(CXXLINK) $(generateUniqueName_LDFLAGS) $(generateUniqueName_OBJECTS) $(generateUniqueName_LDADD) $(LIBS)
getDependentDecls$(EXEEXT): $(getDependentDecls_OBJECTS) $(getDependentDecls_DEPENDENCIES) 
	@rm -f getDependentDecls$(EXEEXT)
	$(CXXLINK) $(getDependentDecls_LDFLAGS) $(getDependentDecls_OBJECTS) $(getDependentDecls_LDADD) $(LIBS)
insertAfterUsingCommaOp$(EXEEXT): $(insertAfterUsingCommaOp_OBJECTS) $(insertAfterUsingCommaOp_DEPENDENCIES) 
	@rm -f insertAfterUsingCommaOp$(EXEEXT)
	$(CXXLINK) $(insertAfterUsingCommaOp_LDFLAGS) $(insertAfterUsingCommaOp_OBJECTS) $(insertAfterUsingCommaOp_LDADD) $(LIBS)
insertBeforeUsingCommaOp$(EXEEXT): $(insertBeforeUsingCommaOp_OBJECTS) $(insertBeforeUsingCommaOp_DEPENDENCIES) 
	@rm -f insertBeforeUsingCommaOp$(EXEEXT)
	$(CXXLINK) $(insertBeforeUsingCommaOp_LDFLAGS) $(insertBeforeUsingCommaOp_OBJECTS) $(insertBeforeUsingCommaOp_LDADD) $(LIBS)
insertHeader$(EXEEXT): $(insertHeader_OBJECTS) $(insertHeader_DEPENDENCIES) 
	@rm -f insertHeader$(EXEEXT)
	$(CXXLINK) $(insertHeader_LDFLAGS) $(insertHeader_OBJECTS) $(insertHeader_LDADD) $(LIBS)
insertStatementBeforeFunction$(EXEEXT): $(insertStatementBeforeFunction_OBJECTS) $(insertStatementBeforeFunction_DEPENDENCIES) 
	@rm -f insertStatementBeforeFunction$(EXEEXT)
	$(CXXLINK) $(insertStatementBeforeFunction_LDFLAGS) $(insertStatementBeforeFunction_OBJECTS) $(insertStatementBeforeFunction_LDADD) $(LIBS)
instrumentEndOfFunction$(EXEEXT): $(instrumentEndOfFunction_OBJECTS) $(instrumentEndOfFunction_DEPENDENCIES) 
	@rm -f instrumentEndOfFunction$(EXEEXT)
	$(CXXLINK) $(instrumentEndOfFunction_LDFLAGS) $(instrumentEndOfFunction_OBJECTS) $(instrumentEndOfFunction_LDADD) $(LIBS)
isUpcPhaseLessSharedType$(EXEEXT): $(isUpcPhaseLessSharedType_OBJECTS) $(isUpcPhaseLessSharedType_DEPENDENCIES) 
	@rm -f isUpcPhaseLessSharedType$(EXEEXT)
	$(CXXLINK) $(isUpcPhaseLessSharedType_LDFLAGS) $(isUpcPhaseLessSharedType_OBJECTS) $(isUpcPhaseLessSharedType_LDADD) $(LIBS)
isUpcSharedType$(EXEEXT): $(isUpcSharedType_OBJECTS) $(isUpcSharedType_DEPENDENCIES) 
	@rm -f isUpcSharedType$(EXEEXT)
	$(CXXLINK) $(isUpcSharedType_LDFLAGS) $(isUpcSharedType_OBJECTS) $(isUpcSharedType_LDADD) $(LIBS)
livenessAnalysis$(EXEEXT): $(livenessAnalysis_OBJECTS) $(livenessAnalysis_DEPENDENCIES) 
	@rm -f livenessAnalysis$(EXEEXT)
	$(CXXLINK) $(livenessAnalysis_LDFLAGS) $(livenessAnalysis_OBJECTS) $(livenessAnalysis_LDADD) $(LIBS)
lookupNamedType$(EXEEXT): $(lookupNamedType_OBJECTS) $(lookupNamedType_DEPENDENCIES) 
	@rm -f lookupNamedType$(EXEEXT)
	$(CXXLINK) $(lookupNamedType_LDFLAGS) $(lookupNamedType_OBJECTS) $(lookupNamedType_LDADD) $(LIBS)
loopInterchange$(EXEEXT): $(loopInterchange_OBJECTS) $(loopInterchange_DEPENDENCIES) 
	@rm -f loopInterchange$(EXEEXT)
	$(CXXLINK) $(loopInterchange_LDFLAGS) $(loopInterchange_OBJECTS) $(loopInterchange_LDADD) $(LIBS)
loopNormalization$(EXEEXT): $(loopNormalization_OBJECTS) $(loopNormalization_DEPENDENCIES) 
	@rm -f loopNormalization$(EXEEXT)
	$(CXXLINK) $(loopNormalization_LDFLAGS) $(loopNormalization_OBJECTS) $(loopNormalization_LDADD) $(LIBS)
loopTiling$(EXEEXT): $(loopTiling_OBJECTS) $(loopTiling_DEPENDENCIES) 
	@rm -f loopTiling$(EXEEXT)
	$(CXXLINK) $(loopTiling_LDFLAGS) $(loopTiling_OBJECTS) $(loopTiling_LDADD) $(LIBS)
loopUnrolling$(EXEEXT): $(loopUnrolling_OBJECTS) $(loopUnrolling_DEPENDENCIES) 
	@rm -f loopUnrolling$(EXEEXT)
	$(CXXLINK) $(loopUnrolling_LDFLAGS) $(loopUnrolling_OBJECTS) $(loopUnrolling_LDADD) $(LIBS)
movePreprocessingInfo$(EXEEXT): $(movePreprocessingInfo_OBJECTS) $(movePreprocessingInfo_DEPENDENCIES) 
	@rm -f movePreprocessingInfo$(EXEEXT)
	$(CXXLINK) $(movePreprocessingInfo_LDFLAGS) $(movePreprocessingInfo_OBJECTS) $(movePreprocessingInfo_LDADD) $(LIBS)
removeStatementCommentRelocation$(EXEEXT): $(removeStatementCommentRelocation_OBJECTS) $(removeStatementCommentRelocation_DEPENDENCIES) 
	@rm -f removeStatementCommentRelocation$(EXEEXT)
	$(CXXLINK) $(removeStatementCommentRelocation_LDFLAGS) $(removeStatementCommentRelocation_OBJECTS) $(removeStatementCommentRelocation_LDADD) $(LIBS)
replaceMacroCalls$(EXEEXT): $(replaceMacroCalls_OBJECTS) $(replaceMacroCalls_DEPENDENCIES) 
	@rm -f replaceMacroCalls$(EXEEXT)
	$(CXXLINK) $(replaceMacroCalls_LDFLAGS) $(replaceMacroCalls_OBJECTS) $(replaceMacroCalls_LDADD) $(LIBS)
replaceWithPattern$(EXEEXT): $(replaceWithPattern_OBJECTS) $(replaceWithPattern_DEPENDENCIES) 
	@rm -f replaceWithPattern$(EXEEXT)
	$(CXXLINK) $(replaceWithPattern_LDFLAGS) $(replaceWithPattern_OBJECTS) $(replaceWithPattern_LDADD) $(LIBS)
typeTraits$(EXEEXT): $(typeTraits_OBJECTS) $(typeTraits_DEPENDENCIES) 
	@rm -f typeTraits$(EXEEXT)
	$(CXXLINK) $(typeTraits_LDFLAGS) $(typeTraits_OBJECTS) $(typeTraits_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../../config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
#export ROSE_IN_BUILD_TREE=$(top_builddir)

rose_inputfixVariableReferences.C:fixVariableReferences
	./fixVariableReferences$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputfixVariableReferences.C
rose_inputdeepDelete.C:deepDelete
	./deepDelete$(EXEEXT) $(TEST_CXXFLAGS) -rose:detect_dangling_pointers 1 -c $(srcdir)/inputdeepDelete.C
rose_inputBlank1.C:buildFunctionDeclaration
	./buildFunctionDeclaration$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputBlank1.C
rose_inputBlank2.C:buildNondefiningFunction
	./buildNondefiningFunction$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputBlank2.C
rose_inputfindMain.C:findMain
	./findMain$(EXEEXT)  $(TEST_CXXFLAGS) -c  $(srcdir)/inputfindMain.C
rose_inputbuildVariableDeclaration.C:buildVariableDeclaration
	./buildVariableDeclaration$(EXEEXT)  $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildVariableDeclaration.C
rose_inputbuildAssignmentStmt.C:buildAssignmentStmt
	./buildAssignmentStmt$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildAssignmentStmt.C	
rose_inputbuildIfStmt.C:buildIfStmt
	./buildIfStmt$(EXEEXT) $(TEST_CXXFLAGS) -I$(srcdir) -c $(srcdir)/inputbuildIfStmt.C 
rose_inputbuildFile.C:buildFile
	rm -rf testfile525.cpp
	rm -rf testfile626.cpp
	./buildFile$(EXEEXT) $(TEST_CXXFLAGS) -I$(srcdir) -c $(srcdir)/inputbuildFile.C 
rose_inputbuildFunctionCalls.C:buildFunctionCalls
	./buildFunctionCalls$(EXEEXT) $(TEST_CXXFLAGS) -I$(srcdir) -c $(srcdir)/inputbuildFunctionCalls.C	
rose_inputbuildPragmaDeclaration.c:buildPragmaDeclaration
	./buildPragmaDeclaration$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildPragmaDeclaration.c
rose_inputAttachComment.C:attachComment
	./attachComment$(EXEEXT)  $(TEST_CXXFLAGS) -c $(srcdir)/inputAttachComment.C	
rose_inputInsertHeader.C:insertHeader
	./insertHeader$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputInsertHeader.C
rose_inputbuildExpression.C: buildExpression
	./buildExpression$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildExpression.C
rose_inputbuildStructDeclaration.C:buildStructDeclaration
	./buildStructDeclaration$(EXEEXT)  $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildStructDeclaration.C
rose_inputbuildStructDeclaration2.C:buildStructDeclaration2
	./buildStructDeclaration2$(EXEEXT)  $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildStructDeclaration2.C
rose_inputLookupNamedType.C:lookupNamedType
	./lookupNamedType$(EXEEXT)  $(TEST_CXXFLAGS) -c $(srcdir)/inputLookupNamedType.C
rose_inputMovePreprocessingInfo.C:movePreprocessingInfo
	./movePreprocessingInfo$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputMovePreprocessingInfo.C
rose_inputbuildCpreprocessorDefineDeclaration.C:buildCpreprocessorDefineDeclaration
	./buildCpreprocessorDefineDeclaration$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildCpreprocessorDefineDeclaration.C
rose_inputinstrumentEndOfFunction.C:instrumentEndOfFunction
	./instrumentEndOfFunction$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputinstrumentEndOfFunction.C
rose_inputisUpcSharedType.upc:isUpcSharedType
	./isUpcSharedType$(EXEEXT) $(TEST_CXXFLAGS) -rose:skipfinalCompileStep -rose:upc_threads 1 -c $(srcdir)/inputisUpcSharedType.upc

rose_inputisUpcPhaseLessSharedType.upc:isUpcPhaseLessSharedType
	./isUpcPhaseLessSharedType$(EXEEXT) $(TEST_CXXFLAGS) -rose:skipfinalCompileStep -rose:upc_threads 1-c $(srcdir)/inputisUpcPhaseLessSharedType.upc

rose_inputbuildLabelStatement.C:buildLabelStatement
	./buildLabelStatement$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildLabelStatement.C

rose_inputbuildSizeOfOp.C:buildSizeOfOp
	./buildSizeOfOp$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildSizeOfOp.C

abiStuffTestDone: abiStuffTest inputAbiStuffTest.c
	./abiStuffTest$(EXEEXT) $(srcdir)/inputAbiStuffTest.c && touch abiStuffTestDone

rose_inputAbiStuffTestUPC.upc:abiStuffTestUPC
	./abiStuffTestUPC$(EXEEXT) $(TEST_CXXFLAGS) -rose:upc_threads 1 -c $(srcdir)/inputAbiStuffTestUPC.upc

rose_inputbuildNullStatement.C:buildNullStatement
	./buildNullStatement$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildNullStatement.C

rose_inputbuildForStmt.C:buildForStmt
	./buildForStmt$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildForStmt.C

rose_inputcanonicalLoop.C:canonicalLoop
	./canonicalLoop$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputcanonicalLoop.C

rose_inputloopNormalization.C:loopNormalization
	./loopNormalization$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopNormalization.C

rose_inputcollectReadWriteVariables.C:collectReadWriteVariables
	./collectReadWriteVariables$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputcollectReadWriteVariables.C

rose_inputtypeTraits.C:typeTraits
	./typeTraits$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputtypeTraits.C

rose_inputlivenessAnalysis.C:livenessAnalysis
	./livenessAnalysis$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputlivenessAnalysis.C
rose_inputgenerateUniqueName.C:generateUniqueName
	./generateUniqueName$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputgenerateUniqueName.C 1>rose_inputgenerateUniqueName.out

rose_inputannotateExpressionsWithUniqueNames.C:annotateExpressionsWithUniqueNames
	./annotateExpressionsWithUniqueNames$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputannotateExpressionsWithUniqueNames.C 1>rose_inputannotateExpressionsWithUniqueNames.out

rose_inputinsertBeforeUsingCommaOp.C:insertBeforeUsingCommaOp
	./insertBeforeUsingCommaOp$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputinsertBeforeUsingCommaOp.C

rose_inputinsertAfterUsingCommaOp.C:insertAfterUsingCommaOp
	./insertAfterUsingCommaOp$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputinsertAfterUsingCommaOp.C

rose_inputdeepCopy.C:deepCopy
	./deepCopy$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputdeepCopy.C

rose_inputbuildProcedureHeaderStatement.f : buildProcedureHeaderStatement
# DQ (9/13/2010): I think that we need both levels of if tests else --without-java will not work.
# DQ (3/18/2009): Make this dependent upon if ROSE was configured to use Fortran.
# if ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT 
# if ROSE_USE_OPEN_FORTRAN_PARSER
	./buildProcedureHeaderStatement$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildProcedureHeaderStatement.f
rose_inputbuildExternalStatement.f:buildExternalStatement
	./buildExternalStatement$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildExternalStatement.f
rose_inputbuildCommonBlock.f:buildCommonBlock
	./buildCommonBlock$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildCommonBlock.f
rose_inputdoLoopNormalization.f:doLoopNormalization
	./doLoopNormalization$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputdoLoopNormalization.f
rose_inputbuildLabelStatement2.f:buildLabelStatement2
	./buildLabelStatement2$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildLabelStatement2.f

rose_inputbuildAbstractHandle.C:buildAbstractHandle
	./buildAbstractHandle$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildAbstractHandle.C

rose_inputbuildTypedefDeclaration.C:buildTypedefDeclaration
	./buildTypedefDeclaration$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputbuildTypedefDeclaration.C
rose_inputgetDependentDecls.C:getDependentDecls
	./getDependentDecls$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputgetDependentDecls.C

rose_inputreplaceWithPattern.C:replaceWithPattern
	./replaceWithPattern$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputreplaceWithPattern.C 

rose_inputloopUnrolling.C:loopUnrolling
	./loopUnrolling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopUnrolling.C -rose:loopunroll:abstract_handle "Statement<position,5>" -rose:loopunroll:factor 3 && indent rose_inputloopUnrolling.C
	./loopUnrolling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopUnrolling.C -rose:loopunroll:abstract_handle "Statement<position,6>" -rose:loopunroll:factor 5 -rose:output rose_inputloopUnrolling1.C && indent rose_inputloopUnrolling1.C 
	./loopUnrolling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopUnrolling.C -rose:loopunroll:abstract_handle "Statement<position,6>" -rose:loopunroll:factor 3 -rose:output rose_inputloopUnrolling2.C && indent rose_inputloopUnrolling2.C
# This case is required for platforms where we test ROSE, and which sometimes don't have "indent" available.
#rose_inputloopUnrolling.C:loopUnrolling
#	./loopUnrolling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopUnrolling.C -rose:loopunroll:abstract_handle "Statement<position,5>" -rose:loopunroll:factor 3
#	./loopUnrolling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopUnrolling.C -rose:loopunroll:abstract_handle "Statement<position,6>" -rose:loopunroll:factor 5 -rose:output rose_inputloopUnrolling1.C
#	./loopUnrolling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopUnrolling.C -rose:loopunroll:abstract_handle "Statement<position,6>" -rose:loopunroll:factor 3 -rose:output rose_inputloopUnrolling2.C

# interchange the first loop within the input file, interchange depth is 4, lexicographical order is 1.
rose_inputloopInterchange.C:loopInterchange
	./loopInterchange$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopInterchange.C -rose:loopInterchange:abstract_handle "ForStatement<numbering,1>" -rose:loopInterchange:depth 4 -rose:loopInterchange:order 1 

# Tile the first loop within the input file at depth 3 , tile size is 5
rose_inputloopTiling.C:loopTiling
	./loopTiling$(EXEEXT) $(TEST_CXXFLAGS) -c $(srcdir)/inputloopTiling.C -rose:loopTiling:abstract_handle "ForStatement<numbering,1>" -rose:loopTiling:depth 3 -rose:loopTiling:tilesize 5

rose_inputreplaceMacroCalls.C:replaceMacroCalls
# comment out since boost:wave causes seg fault on 64-bit machines
#	./replaceMacroCalls$(EXEEXT) $(TEST_CXXFLAGS) -rose:wave -c $(srcdir)/inputreplaceMacroCalls.C

# DQ (9/16/2010): Added this test code to demonstrate problem with adding statments around statments with comments or CPP directives attached.
rose_inputinsertStatementBeforeFunction.C: insertStatementBeforeFunction $(srcdir)/inputinsertStatementBeforeFunction_1.h $(srcdir)/inputinsertStatementBeforeFunction_2.h
	./insertStatementBeforeFunction$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputinsertStatementBeforeFunction.C

# There are a lot of different cases that we now test for with the relocation of comments support in the removeStatement() function.
rose_inputRemoveStatementCommentRelocation.C: removeStatementCommentRelocation $(srcdir)/inputRemoveStatementCommentRelocation_1.h $(srcdir)/inputRemoveStatementCommentRelocation_2.h
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation.C
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation_withTopBoundingStatement.C
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation_withoutTopBoundingStatement.C
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation_withBottomBoundingStatement.C
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation_withoutBottomBoundingStatement.C
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation_withTopandBottomBoundingStatement.C
	./removeStatementCommentRelocation$(EXEEXT) $(TEST_CXXFLAGS) -c -I$(srcdir) $(srcdir)/inputRemoveStatementCommentRelocation_withoutTopandBottomBoundingStatement.C

check-local:
	@echo "Test for ROSE SAGE Interfaces."
	$(MAKE) $(generatedCodeExamples)
	@echo "***********************************************************************************************************"
	@echo "****** ROSE/tests/roseTests/astInterfaceTests: make check rule complete (terminated normally) ******"
	@echo "***********************************************************************************************************"

clean-local:
	rm -f *.o test*.C rose_*.c rose_*.C rose_*.f rose_*.cpp *.C.pdf *.c.pdf testfile525.cpp testfile626.cpp rose_*.upc abiStuffTestDone *.dot rose_*
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
